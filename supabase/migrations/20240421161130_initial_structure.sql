create extension if not exists "http" with schema "extensions";

create extension if not exists "moddatetime" with schema "extensions";


create type "public"."Entity" as enum ('Category', 'Source');

create table "public"."_template" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true
);


create table "public"."ad_client" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "isactive" boolean not null default true,
    "value" text not null,
    "name" text not null,
    "createdby" text,
    "updatedby" text,
    "ad_language" text
);


create table "public"."ad_org" (
    "id" bigint generated by default as identity not null,
    "value" text not null,
    "name" text not null,
    "ad_client_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "description" text,
    "code" text
);


create table "public"."ad_user" (
    "auth_user_id" uuid,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "username" text,
    "avatar_url" text,
    "isactive" boolean not null default true,
    "full_name" text,
    "c_bpartner_id" bigint,
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "email" text,
    "id" bigint generated by default as identity not null,
    "supervisor_id" bigint
);


create table "public"."asset" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "name" character varying not null,
    "type" character varying,
    "mimeType" character varying,
    "source" character varying not null
);


create table "public"."c_bpartner" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "isactive" boolean not null default true,
    "value" text not null,
    "name" text not null,
    "ad_language" text,
    "taxid" text,
    "m_pricelist_id" bigint,
    "po_pricelist_id" bigint,
    "isvendor" boolean not null default false,
    "iscustomer" boolean not null default true,
    "isemployee" boolean not null default false,
    "issalesrep" boolean not null default false
);


create table "public"."c_channel" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "name" text not null,
    "description" text,
    "c_channel_uu" uuid default gen_random_uuid()
);


create table "public"."c_channel_map" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "c_channel_id" bigint not null,
    "entity_type" "Entity" not null,
    "internal_code" text not null,
    "channel_code" text not null
);


create table "public"."c_currency" (
    "id" bigint generated by default as identity not null,
    "name" character varying not null,
    "alphabetic_code" text not null,
    "numeric_code" text not null,
    "cursymbol" text,
    "minor_unit" smallint not null default '2'::smallint,
    "is_enabled" boolean not null default true,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now()
);


create table "public"."c_tax" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "name" text not null,
    "description" text,
    "rate" integer not null,
    "c_taxcategory_id" bigint not null,
    "isdefault" boolean not null default false
);


create table "public"."c_taxcategory" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "name" text not null,
    "description" text,
    "isdefault" boolean not null default false
);


create table "public"."c_uom" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "name" text not null,
    "description" text,
    "stdprecision" smallint not null,
    "isdefault" boolean not null default false,
    "uomsymbol" text
);


create table "public"."c_uom_conversion" (
    "id" bigint generated by default as identity not null,
    "ad_client_id" bigint,
    "ad_org_id" bigint,
    "isactive" boolean default true,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone default now(),
    "c_uom_id" bigint,
    "c_uom_to_id" bigint,
    "multiplyrate" smallint default '0'::smallint,
    "dividerate" smallint default '0'::smallint,
    "m_product_id" bigint
);


create table "public"."crud_history" (
    "id" bigint generated by default as identity not null,
    "changed_data" text not null,
    "status" boolean not null default false,
    "created_at" timestamp with time zone not null default now(),
    "sku" text not null
);


create table "public"."m_attribute" (
    "id" bigint generated by default as identity not null,
    "code" text not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "attribute_type" text,
    "backend_type" text,
    "attribute_group_id" bigint not null default '1'::bigint,
    "label" text,
    "isactive" boolean not null default true,
    "name" text not null,
    "attributevaluetype" text not null default 'S'::text,
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "description" text,
    "ismandatory" boolean not null default false,
    "isinstanceattribute" boolean not null default false
);


create table "public"."m_attributegroup" (
    "id" bigint generated by default as identity not null,
    "code" text not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "label" text
);


create table "public"."m_attributeinstance" (
    "m_attribute_id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "m_attributesetinstance_id" bigint not null,
    "m_attributevalue_id" bigint,
    "value" text,
    "valuenumber" numeric,
    "valuedate" timestamp with time zone
);


create table "public"."m_attributeset" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "name" text not null,
    "description" text,
    "isguaranteedate" boolean not null default false,
    "isinstanceattribute" boolean not null default false,
    "mandatorytype" text not null default 'N'::text
);


create table "public"."m_attributesetinstance" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "m_attributeset_id" bigint,
    "serno" text,
    "lot" text,
    "guaranteedate" date
);


alter table "public"."m_attributesetinstance" enable row level security;

create table "public"."m_attributeuse" (
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "m_attribute_id" bigint not null,
    "m_attributeset_id" bigint not null,
    "seqno" smallint
);


create table "public"."m_attributevalue" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "m_attribute_id" bigint not null,
    "value" text not null,
    "name" text not null,
    "description" text
);


create table "public"."m_discountschema" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "name" text not null,
    "validfrom" date,
    "flatdiscount" integer
);


create table "public"."m_locator" (
    "id" bigint generated by default as identity not null,
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "m_warehouse_id" bigint not null,
    "y" text,
    "z" text,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "isdefault" boolean not null default true,
    "x" text,
    "isactive" boolean not null default true,
    "value" text not null
);


create table "public"."m_pricelist" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "name" text not null,
    "description" text,
    "basepricelist_id" bigint,
    "istaxincluded" boolean default false,
    "issopricelist" boolean not null default true,
    "isdefault" boolean not null default false,
    "c_currency_id" bigint not null,
    "enforcepricelimit" boolean not null default false,
    "priceprecision" smallint not null default '2'::smallint
);


create table "public"."m_pricelist_version" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "name" text not null,
    "description" text,
    "m_pricelist_id" bigint not null,
    "m_discountschema_id" bigint not null,
    "validfrom" date not null,
    "m_pricelist_version_base_id" bigint
);


create table "public"."m_product" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "name" text not null,
    "sku" text,
    "updated" timestamp with time zone not null default now(),
    "attributes" jsonb,
    "brand" text,
    "mpn" text,
    "barcode" text,
    "condition" text default 'New'::text,
    "m_attributeset_id" bigint default '1'::bigint,
    "ad_client_id" bigint not null default '1'::bigint,
    "c_uom_id" bigint not null default '2'::bigint,
    "unitsperpack" numeric not null default '1'::numeric,
    "unitsperpallet" smallint,
    "isselfservice" boolean not null default false,
    "discontinued" boolean not null default false,
    "isactive" boolean not null default true,
    "producttype" text not null default 'I'::text,
    "c_taxcategory_id" bigint not null default '1'::bigint,
    "m_product_category_id" bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "imageurl" text,
    "featuredAssetId" bigint,
    "m_product_uu" uuid default gen_random_uuid(),
    "descriptionurl" text
);


create table "public"."m_product_category" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "parent_id" bigint,
    "name" text not null,
    "updated" timestamp with time zone not null default now(),
    "description" text,
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "isselfservice" boolean not null default false,
    "value" text
);


create table "public"."m_product_po" (
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "isactive" boolean not null default true,
    "m_product_id" bigint not null,
    "c_bpartner_id" bigint not null,
    "iscurrentvendor" boolean not null default true,
    "c_uom_id" bigint,
    "c_currency_id" bigint,
    "pricelist" numeric not null default '0'::numeric,
    "pricepo" smallint default '0'::smallint,
    "priceeffective" timestamp with time zone,
    "pricelastpo" smallint default '0'::smallint,
    "pricelastinv" smallint default '0'::smallint,
    "vendorproductno" text not null,
    "barcode" text,
    "vendorcategory" text,
    "discontinued" boolean default false,
    "manufacturer" text,
    "url" text,
    "id" bigint generated by default as identity not null
);


create table "public"."m_productprice" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "m_pricelist_version_id" bigint not null,
    "m_product_id" bigint not null,
    "pricelist" numeric,
    "pricestd" numeric,
    "pricelimit" numeric(8,4)
);


create table "public"."m_replenish" (
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "m_product_id" bigint not null,
    "m_warehouse_id" bigint not null,
    "level_min" numeric not null default '0'::numeric,
    "level_max" numeric not null default '0'::numeric,
    "m_warehousesource_id" bigint,
    "id" bigint generated by default as identity not null,
    "m_replenish_uu" uuid default gen_random_uuid(),
    "replenishtype" text not null default '1'::text,
    "m_locator_id" bigint,
    "qtybatchsize" smallint
);


create table "public"."m_storageonhand" (
    "id" bigint generated by default as identity not null,
    "ad_client_id" bigint default '1'::bigint,
    "ad_org_id" bigint default '1'::bigint,
    "m_locator_id" bigint,
    "m_product_id" bigint not null,
    "qtyonhand" numeric(8,4) not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "warehouse_id" bigint not null,
    "isactive" boolean default true
);


create table "public"."m_substitute" (
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "m_product_id" bigint not null,
    "substitute_id" bigint not null,
    "name" text,
    "description" text
);


create table "public"."m_warehouse" (
    "id" bigint generated by default as identity not null,
    "isactive" boolean not null default true,
    "code" character varying not null,
    "name" character varying not null,
    "ad_client_id" bigint not null default '1'::bigint,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_org_id" bigint default '1'::bigint,
    "isselfservice" boolean not null default false
);


create table "public"."w_basket" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "c_bpartner_id" bigint,
    "m_pricelist_id" bigint,
    "w_basket_uu" uuid not null default gen_random_uuid(),
    "session_id" text,
    "ad_user_id" bigint not null
);


create table "public"."w_basketline" (
    "id" bigint generated by default as identity not null,
    "created" timestamp with time zone not null default now(),
    "updated" timestamp with time zone not null default now(),
    "ad_client_id" bigint not null default '1'::bigint,
    "ad_org_id" bigint not null default '1'::bigint,
    "isactive" boolean not null default true,
    "w_basket_id" bigint not null,
    "qty" numeric not null default '0'::numeric,
    "price" numeric not null default '0'::numeric,
    "product" text,
    "description" text,
    "m_product_id" bigint
);


CREATE UNIQUE INDEX _template_pkey1 ON public.c_uom USING btree (id);

CREATE UNIQUE INDEX _template_pkey2 ON public._template USING btree (id);

CREATE UNIQUE INDEX ad_client_code_key ON public.ad_client USING btree (value);

CREATE UNIQUE INDEX ad_client_pkey ON public.ad_client USING btree (id);

CREATE UNIQUE INDEX ad_org_ad_client_id_key ON public.ad_org USING btree (ad_client_id);

CREATE UNIQUE INDEX ad_org_pkey ON public.ad_org USING btree (id);

CREATE UNIQUE INDEX ad_org_value_key ON public.ad_org USING btree (value);

CREATE UNIQUE INDEX ad_user_pkey ON public.ad_user USING btree (id);

CREATE UNIQUE INDEX ad_user_username_key ON public.ad_user USING btree (username);

CREATE UNIQUE INDEX asset_pkey ON public.asset USING btree (id);

CREATE UNIQUE INDEX c_bpartner_pkey ON public.c_bpartner USING btree (id);

CREATE UNIQUE INDEX c_channel_c_channel_uu_key ON public.c_channel USING btree (c_channel_uu);

CREATE UNIQUE INDEX c_channel_map_pkey ON public.c_channel_map USING btree (id);

CREATE UNIQUE INDEX c_channel_pkey ON public.c_channel USING btree (id);

CREATE UNIQUE INDEX c_currency_alphabetic_code_key ON public.c_currency USING btree (alphabetic_code);

CREATE UNIQUE INDEX c_currency_pkey ON public.c_currency USING btree (id);

CREATE UNIQUE INDEX c_tax_name_key ON public.c_tax USING btree (name);

CREATE UNIQUE INDEX c_tax_pkey ON public.c_tax USING btree (id);

CREATE UNIQUE INDEX c_taxcategory_ad_client_id_name_key ON public.c_taxcategory USING btree (ad_client_id, name);

CREATE UNIQUE INDEX c_taxcategory_pkey ON public.c_taxcategory USING btree (id);

CREATE UNIQUE INDEX c_uom_conversion_ad_client_id_key ON public.c_uom_conversion USING btree (ad_client_id);

CREATE UNIQUE INDEX c_uom_conversion_c_uom_id_key ON public.c_uom_conversion USING btree (c_uom_id);

CREATE UNIQUE INDEX c_uom_conversion_c_uom_to_id_key ON public.c_uom_conversion USING btree (c_uom_to_id);

CREATE UNIQUE INDEX c_uom_conversion_pkey ON public.c_uom_conversion USING btree (id);

CREATE UNIQUE INDEX catalog_products_pkey ON public.m_product USING btree (id);

CREATE UNIQUE INDEX m_attributeinstance_pkey ON public.m_attributeinstance USING btree (m_attribute_id, m_attributesetinstance_id);

CREATE UNIQUE INDEX m_attributeset_pkey ON public.m_attributeset USING btree (id);

CREATE UNIQUE INDEX m_attributesetinstance_pkey ON public.m_attributesetinstance USING btree (id);

CREATE UNIQUE INDEX m_attributevalue_pkey ON public.m_attributevalue USING btree (id);

CREATE UNIQUE INDEX m_discountschema_pkey ON public.m_discountschema USING btree (id);

CREATE UNIQUE INDEX m_pricelist_pkey ON public.m_pricelist USING btree (id);

CREATE UNIQUE INDEX m_pricelist_version_pkey ON public.m_pricelist_version USING btree (id);

CREATE UNIQUE INDEX m_product_category_pkey ON public.m_product_category USING btree (id);

CREATE UNIQUE INDEX m_product_changed_ui_pkey ON public.crud_history USING btree (id);

CREATE UNIQUE INDEX m_product_m_product_uu_key ON public.m_product USING btree (m_product_uu);

CREATE UNIQUE INDEX m_product_po_pkey ON public.m_product_po USING btree (id);

CREATE UNIQUE INDEX m_productprice_m_pricelist_version_id_m_product_id_key ON public.m_productprice USING btree (m_pricelist_version_id, m_product_id);

CREATE UNIQUE INDEX m_productprice_pkey ON public.m_productprice USING btree (id);

CREATE UNIQUE INDEX m_replenish_m_product_id_m_warehouse_id_key ON public.m_replenish USING btree (m_product_id, m_warehouse_id);

CREATE UNIQUE INDEX m_replenish_m_replenish_uu_key ON public.m_replenish USING btree (m_replenish_uu);

CREATE UNIQUE INDEX m_replenish_pkey ON public.m_replenish USING btree (id, m_warehouse_id, m_product_id);

CREATE UNIQUE INDEX m_storageonhand_m_product_id_warehouse_id_key ON public.m_storageonhand USING btree (m_product_id, warehouse_id);

CREATE UNIQUE INDEX m_warehouse_ad_client_id_name_key ON public.m_warehouse USING btree (ad_client_id, name);

CREATE UNIQUE INDEX product_attribute_code_key ON public.m_attribute USING btree (code);

CREATE UNIQUE INDEX product_attribute_group_code_key ON public.m_attributegroup USING btree (code);

CREATE UNIQUE INDEX product_attribute_group_pkey ON public.m_attributegroup USING btree (id);

CREATE UNIQUE INDEX product_attribute_pkey ON public.m_attribute USING btree (id);

CREATE UNIQUE INDEX product_sku_key ON public.m_product USING btree (sku);

CREATE UNIQUE INDEX w_basket_pkey ON public.w_basket USING btree (id);

CREATE UNIQUE INDEX w_basket_session_id_key ON public.w_basket USING btree (session_id);

CREATE UNIQUE INDEX w_basket_w_basket_uu_key ON public.w_basket USING btree (w_basket_uu);

CREATE UNIQUE INDEX w_basketline_pkey ON public.w_basketline USING btree (id);

CREATE UNIQUE INDEX warehouse_code_key ON public.m_warehouse USING btree (code);

CREATE UNIQUE INDEX warehouse_locator_pkey ON public.m_locator USING btree (id);

CREATE UNIQUE INDEX warehouse_name_key ON public.m_warehouse USING btree (name);

CREATE UNIQUE INDEX warehouse_pkey ON public.m_warehouse USING btree (id);

CREATE UNIQUE INDEX warehouse_storageonhand_pkey ON public.m_storageonhand USING btree (id);

alter table "public"."_template" add constraint "_template_pkey2" PRIMARY KEY using index "_template_pkey2";

alter table "public"."ad_client" add constraint "ad_client_pkey" PRIMARY KEY using index "ad_client_pkey";

alter table "public"."ad_org" add constraint "ad_org_pkey" PRIMARY KEY using index "ad_org_pkey";

alter table "public"."ad_user" add constraint "ad_user_pkey" PRIMARY KEY using index "ad_user_pkey";

alter table "public"."asset" add constraint "asset_pkey" PRIMARY KEY using index "asset_pkey";

alter table "public"."c_bpartner" add constraint "c_bpartner_pkey" PRIMARY KEY using index "c_bpartner_pkey";

alter table "public"."c_channel" add constraint "c_channel_pkey" PRIMARY KEY using index "c_channel_pkey";

alter table "public"."c_channel_map" add constraint "c_channel_map_pkey" PRIMARY KEY using index "c_channel_map_pkey";

alter table "public"."c_currency" add constraint "c_currency_pkey" PRIMARY KEY using index "c_currency_pkey";

alter table "public"."c_tax" add constraint "c_tax_pkey" PRIMARY KEY using index "c_tax_pkey";

alter table "public"."c_taxcategory" add constraint "c_taxcategory_pkey" PRIMARY KEY using index "c_taxcategory_pkey";

alter table "public"."c_uom" add constraint "_template_pkey1" PRIMARY KEY using index "_template_pkey1";

alter table "public"."c_uom_conversion" add constraint "c_uom_conversion_pkey" PRIMARY KEY using index "c_uom_conversion_pkey";

alter table "public"."crud_history" add constraint "m_product_changed_ui_pkey" PRIMARY KEY using index "m_product_changed_ui_pkey";

alter table "public"."m_attribute" add constraint "product_attribute_pkey" PRIMARY KEY using index "product_attribute_pkey";

alter table "public"."m_attributegroup" add constraint "product_attribute_group_pkey" PRIMARY KEY using index "product_attribute_group_pkey";

alter table "public"."m_attributeinstance" add constraint "m_attributeinstance_pkey" PRIMARY KEY using index "m_attributeinstance_pkey";

alter table "public"."m_attributeset" add constraint "m_attributeset_pkey" PRIMARY KEY using index "m_attributeset_pkey";

alter table "public"."m_attributesetinstance" add constraint "m_attributesetinstance_pkey" PRIMARY KEY using index "m_attributesetinstance_pkey";

alter table "public"."m_attributevalue" add constraint "m_attributevalue_pkey" PRIMARY KEY using index "m_attributevalue_pkey";

alter table "public"."m_discountschema" add constraint "m_discountschema_pkey" PRIMARY KEY using index "m_discountschema_pkey";

alter table "public"."m_locator" add constraint "warehouse_locator_pkey" PRIMARY KEY using index "warehouse_locator_pkey";

alter table "public"."m_pricelist" add constraint "m_pricelist_pkey" PRIMARY KEY using index "m_pricelist_pkey";

alter table "public"."m_pricelist_version" add constraint "m_pricelist_version_pkey" PRIMARY KEY using index "m_pricelist_version_pkey";

alter table "public"."m_product" add constraint "catalog_products_pkey" PRIMARY KEY using index "catalog_products_pkey";

alter table "public"."m_product_category" add constraint "m_product_category_pkey" PRIMARY KEY using index "m_product_category_pkey";

alter table "public"."m_product_po" add constraint "m_product_po_pkey" PRIMARY KEY using index "m_product_po_pkey";

alter table "public"."m_productprice" add constraint "m_productprice_pkey" PRIMARY KEY using index "m_productprice_pkey";

alter table "public"."m_replenish" add constraint "m_replenish_pkey" PRIMARY KEY using index "m_replenish_pkey";

alter table "public"."m_storageonhand" add constraint "warehouse_storageonhand_pkey" PRIMARY KEY using index "warehouse_storageonhand_pkey";

alter table "public"."m_warehouse" add constraint "warehouse_pkey" PRIMARY KEY using index "warehouse_pkey";

alter table "public"."w_basket" add constraint "w_basket_pkey" PRIMARY KEY using index "w_basket_pkey";

alter table "public"."w_basketline" add constraint "w_basketline_pkey" PRIMARY KEY using index "w_basketline_pkey";

alter table "public"."_template" add constraint "_template_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."_template" validate constraint "_template_ad_client_id_fkey";

alter table "public"."_template" add constraint "_template_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."_template" validate constraint "_template_ad_org_id_fkey";

alter table "public"."ad_client" add constraint "ad_client_code_key" UNIQUE using index "ad_client_code_key";

alter table "public"."ad_org" add constraint "ad_org_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."ad_org" validate constraint "ad_org_ad_client_id_fkey";

alter table "public"."ad_org" add constraint "ad_org_ad_client_id_key" UNIQUE using index "ad_org_ad_client_id_key";

alter table "public"."ad_org" add constraint "ad_org_value_key" UNIQUE using index "ad_org_value_key";

alter table "public"."ad_user" add constraint "ad_user_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) ON DELETE CASCADE not valid;

alter table "public"."ad_user" validate constraint "ad_user_ad_client_id_fkey";

alter table "public"."ad_user" add constraint "ad_user_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) ON DELETE SET DEFAULT not valid;

alter table "public"."ad_user" validate constraint "ad_user_ad_org_id_fkey";

alter table "public"."ad_user" add constraint "ad_user_auth_user_id_fkey" FOREIGN KEY (auth_user_id) REFERENCES auth.users(id) ON DELETE SET DEFAULT not valid;

alter table "public"."ad_user" validate constraint "ad_user_auth_user_id_fkey";

alter table "public"."ad_user" add constraint "ad_user_c_bpartner_id_fkey" FOREIGN KEY (c_bpartner_id) REFERENCES c_bpartner(id) ON DELETE CASCADE not valid;

alter table "public"."ad_user" validate constraint "ad_user_c_bpartner_id_fkey";

alter table "public"."ad_user" add constraint "ad_user_supervisor_id_fkey" FOREIGN KEY (supervisor_id) REFERENCES ad_user(id) ON DELETE SET DEFAULT not valid;

alter table "public"."ad_user" validate constraint "ad_user_supervisor_id_fkey";

alter table "public"."ad_user" add constraint "ad_user_username_key" UNIQUE using index "ad_user_username_key";

alter table "public"."ad_user" add constraint "username_length" CHECK ((char_length(username) >= 3)) not valid;

alter table "public"."ad_user" validate constraint "username_length";

alter table "public"."c_bpartner" add constraint "c_bpartner_m_pricelist_id_fkey" FOREIGN KEY (m_pricelist_id) REFERENCES m_pricelist(id) not valid;

alter table "public"."c_bpartner" validate constraint "c_bpartner_m_pricelist_id_fkey";

alter table "public"."c_bpartner" add constraint "c_bpartner_po_pricelist_id_fkey" FOREIGN KEY (po_pricelist_id) REFERENCES m_pricelist(id) not valid;

alter table "public"."c_bpartner" validate constraint "c_bpartner_po_pricelist_id_fkey";

alter table "public"."c_channel" add constraint "c_channel_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."c_channel" validate constraint "c_channel_ad_org_id_fkey";

alter table "public"."c_channel" add constraint "c_channel_c_channel_uu_key" UNIQUE using index "c_channel_c_channel_uu_key";

alter table "public"."c_channel_map" add constraint "c_channel_map_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."c_channel_map" validate constraint "c_channel_map_ad_org_id_fkey";

alter table "public"."c_channel_map" add constraint "c_channel_map_c_channel_id_fkey" FOREIGN KEY (c_channel_id) REFERENCES c_channel(id) ON DELETE CASCADE not valid;

alter table "public"."c_channel_map" validate constraint "c_channel_map_c_channel_id_fkey";

alter table "public"."c_currency" add constraint "c_currency_alphabetic_code_key" UNIQUE using index "c_currency_alphabetic_code_key";

alter table "public"."c_tax" add constraint "c_tax_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."c_tax" validate constraint "c_tax_ad_client_id_fkey";

alter table "public"."c_tax" add constraint "c_tax_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."c_tax" validate constraint "c_tax_ad_org_id_fkey";

alter table "public"."c_tax" add constraint "c_tax_c_taxcategory_id_fkey" FOREIGN KEY (c_taxcategory_id) REFERENCES c_taxcategory(id) not valid;

alter table "public"."c_tax" validate constraint "c_tax_c_taxcategory_id_fkey";

alter table "public"."c_tax" add constraint "c_tax_name_key" UNIQUE using index "c_tax_name_key";

alter table "public"."c_taxcategory" add constraint "c_taxcategory_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."c_taxcategory" validate constraint "c_taxcategory_ad_client_id_fkey";

alter table "public"."c_taxcategory" add constraint "c_taxcategory_ad_client_id_name_key" UNIQUE using index "c_taxcategory_ad_client_id_name_key";

alter table "public"."c_taxcategory" add constraint "c_taxcategory_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."c_taxcategory" validate constraint "c_taxcategory_ad_org_id_fkey";

alter table "public"."c_uom" add constraint "c_uom_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."c_uom" validate constraint "c_uom_ad_client_id_fkey";

alter table "public"."c_uom" add constraint "c_uom_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."c_uom" validate constraint "c_uom_ad_org_id_fkey";

alter table "public"."c_uom_conversion" add constraint "c_uom_conversion_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) ON DELETE CASCADE not valid;

alter table "public"."c_uom_conversion" validate constraint "c_uom_conversion_ad_client_id_fkey";

alter table "public"."c_uom_conversion" add constraint "c_uom_conversion_ad_client_id_key" UNIQUE using index "c_uom_conversion_ad_client_id_key";

alter table "public"."c_uom_conversion" add constraint "c_uom_conversion_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."c_uom_conversion" validate constraint "c_uom_conversion_ad_org_id_fkey";

alter table "public"."c_uom_conversion" add constraint "c_uom_conversion_c_uom_id_fkey" FOREIGN KEY (c_uom_id) REFERENCES c_uom(id) ON DELETE CASCADE not valid;

alter table "public"."c_uom_conversion" validate constraint "c_uom_conversion_c_uom_id_fkey";

alter table "public"."c_uom_conversion" add constraint "c_uom_conversion_c_uom_id_key" UNIQUE using index "c_uom_conversion_c_uom_id_key";

alter table "public"."c_uom_conversion" add constraint "c_uom_conversion_c_uom_to_id_fkey" FOREIGN KEY (c_uom_to_id) REFERENCES c_uom(id) ON DELETE CASCADE not valid;

alter table "public"."c_uom_conversion" validate constraint "c_uom_conversion_c_uom_to_id_fkey";

alter table "public"."c_uom_conversion" add constraint "c_uom_conversion_c_uom_to_id_key" UNIQUE using index "c_uom_conversion_c_uom_to_id_key";

alter table "public"."c_uom_conversion" add constraint "c_uom_conversion_m_product_id_fkey" FOREIGN KEY (m_product_id) REFERENCES m_product(id) ON DELETE CASCADE not valid;

alter table "public"."c_uom_conversion" validate constraint "c_uom_conversion_m_product_id_fkey";

alter table "public"."m_attribute" add constraint "m_attribute_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) ON DELETE CASCADE not valid;

alter table "public"."m_attribute" validate constraint "m_attribute_ad_client_id_fkey";

alter table "public"."m_attribute" add constraint "m_attribute_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) ON DELETE CASCADE not valid;

alter table "public"."m_attribute" validate constraint "m_attribute_ad_org_id_fkey";

alter table "public"."m_attribute" add constraint "m_attribute_attribute_group_id_fkey" FOREIGN KEY (attribute_group_id) REFERENCES m_attributegroup(id) not valid;

alter table "public"."m_attribute" validate constraint "m_attribute_attribute_group_id_fkey";

alter table "public"."m_attribute" add constraint "product_attribute_code_key" UNIQUE using index "product_attribute_code_key";

alter table "public"."m_attributegroup" add constraint "product_attribute_group_code_key" UNIQUE using index "product_attribute_group_code_key";

alter table "public"."m_attributeinstance" add constraint "m_attributeinstance_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_attributeinstance" validate constraint "m_attributeinstance_ad_client_id_fkey";

alter table "public"."m_attributeinstance" add constraint "m_attributeinstance_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_attributeinstance" validate constraint "m_attributeinstance_ad_org_id_fkey";

alter table "public"."m_attributeinstance" add constraint "m_attributeinstance_m_attribute_id_fkey" FOREIGN KEY (m_attribute_id) REFERENCES m_attribute(id) ON DELETE CASCADE not valid;

alter table "public"."m_attributeinstance" validate constraint "m_attributeinstance_m_attribute_id_fkey";

alter table "public"."m_attributeinstance" add constraint "m_attributeinstance_m_attributesetinstance_id_fkey" FOREIGN KEY (m_attributesetinstance_id) REFERENCES m_attributesetinstance(id) ON DELETE CASCADE not valid;

alter table "public"."m_attributeinstance" validate constraint "m_attributeinstance_m_attributesetinstance_id_fkey";

alter table "public"."m_attributeinstance" add constraint "m_attributeinstance_m_attributevalue_id_fkey" FOREIGN KEY (m_attributevalue_id) REFERENCES m_attributevalue(id) ON DELETE CASCADE not valid;

alter table "public"."m_attributeinstance" validate constraint "m_attributeinstance_m_attributevalue_id_fkey";

alter table "public"."m_attributeset" add constraint "m_attributeset_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_attributeset" validate constraint "m_attributeset_ad_client_id_fkey";

alter table "public"."m_attributeset" add constraint "m_attributeset_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_attributeset" validate constraint "m_attributeset_ad_org_id_fkey";

alter table "public"."m_attributeset" add constraint "m_attributeset_name_check" CHECK ((length(name) < 60)) not valid;

alter table "public"."m_attributeset" validate constraint "m_attributeset_name_check";

alter table "public"."m_attributesetinstance" add constraint "m_attributesetinstance_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_attributesetinstance" validate constraint "m_attributesetinstance_ad_client_id_fkey";

alter table "public"."m_attributesetinstance" add constraint "m_attributesetinstance_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_attributesetinstance" validate constraint "m_attributesetinstance_ad_org_id_fkey";

alter table "public"."m_attributesetinstance" add constraint "m_attributesetinstance_m_attributeset_id_fkey" FOREIGN KEY (m_attributeset_id) REFERENCES m_attributeset(id) ON DELETE CASCADE not valid;

alter table "public"."m_attributesetinstance" validate constraint "m_attributesetinstance_m_attributeset_id_fkey";

alter table "public"."m_attributeuse" add constraint "m_attributeuse_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_attributeuse" validate constraint "m_attributeuse_ad_client_id_fkey";

alter table "public"."m_attributeuse" add constraint "m_attributeuse_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_attributeuse" validate constraint "m_attributeuse_ad_org_id_fkey";

alter table "public"."m_attributeuse" add constraint "m_attributeuse_m_attribute_id_fkey" FOREIGN KEY (m_attribute_id) REFERENCES m_attribute(id) ON DELETE CASCADE not valid;

alter table "public"."m_attributeuse" validate constraint "m_attributeuse_m_attribute_id_fkey";

alter table "public"."m_attributeuse" add constraint "m_attributeuse_m_attributeset_id_fkey" FOREIGN KEY (m_attributeset_id) REFERENCES m_attributeset(id) ON DELETE CASCADE not valid;

alter table "public"."m_attributeuse" validate constraint "m_attributeuse_m_attributeset_id_fkey";

alter table "public"."m_attributevalue" add constraint "m_attributevalue_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_attributevalue" validate constraint "m_attributevalue_ad_client_id_fkey";

alter table "public"."m_attributevalue" add constraint "m_attributevalue_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_attributevalue" validate constraint "m_attributevalue_ad_org_id_fkey";

alter table "public"."m_attributevalue" add constraint "m_attributevalue_m_attribute_id_fkey" FOREIGN KEY (m_attribute_id) REFERENCES m_attribute(id) not valid;

alter table "public"."m_attributevalue" validate constraint "m_attributevalue_m_attribute_id_fkey";

alter table "public"."m_discountschema" add constraint "m_discountschema_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_discountschema" validate constraint "m_discountschema_ad_client_id_fkey";

alter table "public"."m_discountschema" add constraint "m_discountschema_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_discountschema" validate constraint "m_discountschema_ad_org_id_fkey";

alter table "public"."m_locator" add constraint "m_locator_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_locator" validate constraint "m_locator_ad_client_id_fkey";

alter table "public"."m_locator" add constraint "m_locator_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_locator" validate constraint "m_locator_ad_org_id_fkey";

alter table "public"."m_locator" add constraint "m_locator_m_warehouse_id_fkey" FOREIGN KEY (m_warehouse_id) REFERENCES m_warehouse(id) not valid;

alter table "public"."m_locator" validate constraint "m_locator_m_warehouse_id_fkey";

alter table "public"."m_pricelist" add constraint "m_pricelist_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_pricelist" validate constraint "m_pricelist_ad_client_id_fkey";

alter table "public"."m_pricelist" add constraint "m_pricelist_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_pricelist" validate constraint "m_pricelist_ad_org_id_fkey";

alter table "public"."m_pricelist" add constraint "m_pricelist_basepricelist_id_fkey" FOREIGN KEY (basepricelist_id) REFERENCES m_pricelist(id) not valid;

alter table "public"."m_pricelist" validate constraint "m_pricelist_basepricelist_id_fkey";

alter table "public"."m_pricelist" add constraint "m_pricelist_c_currency_id_fkey" FOREIGN KEY (c_currency_id) REFERENCES c_currency(id) not valid;

alter table "public"."m_pricelist" validate constraint "m_pricelist_c_currency_id_fkey";

alter table "public"."m_pricelist_version" add constraint "m_pricelist_version_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_pricelist_version" validate constraint "m_pricelist_version_ad_client_id_fkey";

alter table "public"."m_pricelist_version" add constraint "m_pricelist_version_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_pricelist_version" validate constraint "m_pricelist_version_ad_org_id_fkey";

alter table "public"."m_pricelist_version" add constraint "m_pricelist_version_m_discountschema_id_fkey" FOREIGN KEY (m_discountschema_id) REFERENCES m_discountschema(id) not valid;

alter table "public"."m_pricelist_version" validate constraint "m_pricelist_version_m_discountschema_id_fkey";

alter table "public"."m_pricelist_version" add constraint "m_pricelist_version_m_pricelist_id_fkey" FOREIGN KEY (m_pricelist_id) REFERENCES m_pricelist(id) not valid;

alter table "public"."m_pricelist_version" validate constraint "m_pricelist_version_m_pricelist_id_fkey";

alter table "public"."m_pricelist_version" add constraint "m_pricelist_version_m_pricelist_version_base_id_fkey" FOREIGN KEY (m_pricelist_version_base_id) REFERENCES m_pricelist_version(id) not valid;

alter table "public"."m_pricelist_version" validate constraint "m_pricelist_version_m_pricelist_version_base_id_fkey";

alter table "public"."m_product" add constraint "m_product_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_product" validate constraint "m_product_ad_client_id_fkey";

alter table "public"."m_product" add constraint "m_product_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_product" validate constraint "m_product_ad_org_id_fkey";

alter table "public"."m_product" add constraint "m_product_c_taxcategory_id_fkey" FOREIGN KEY (c_taxcategory_id) REFERENCES c_taxcategory(id) not valid;

alter table "public"."m_product" validate constraint "m_product_c_taxcategory_id_fkey";

alter table "public"."m_product" add constraint "m_product_c_uom_id_fkey" FOREIGN KEY (c_uom_id) REFERENCES c_uom(id) not valid;

alter table "public"."m_product" validate constraint "m_product_c_uom_id_fkey";

alter table "public"."m_product" add constraint "m_product_featuredAssetId_fkey" FOREIGN KEY ("featuredAssetId") REFERENCES asset(id) ON DELETE SET NULL not valid;

alter table "public"."m_product" validate constraint "m_product_featuredAssetId_fkey";

alter table "public"."m_product" add constraint "m_product_m_attributeset_id_fkey" FOREIGN KEY (m_attributeset_id) REFERENCES m_attributeset(id) not valid;

alter table "public"."m_product" validate constraint "m_product_m_attributeset_id_fkey";

alter table "public"."m_product" add constraint "m_product_m_product_category_id_fkey" FOREIGN KEY (m_product_category_id) REFERENCES m_product_category(id) not valid;

alter table "public"."m_product" validate constraint "m_product_m_product_category_id_fkey";

alter table "public"."m_product" add constraint "m_product_m_product_uu_key" UNIQUE using index "m_product_m_product_uu_key";

alter table "public"."m_product" add constraint "product_sku_key" UNIQUE using index "product_sku_key";

alter table "public"."m_product_category" add constraint "m_product_category_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_product_category" validate constraint "m_product_category_ad_client_id_fkey";

alter table "public"."m_product_category" add constraint "m_product_category_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_product_category" validate constraint "m_product_category_ad_org_id_fkey";

alter table "public"."m_product_category" add constraint "m_product_category_parent_id_fkey" FOREIGN KEY (parent_id) REFERENCES m_product_category(id) ON DELETE SET DEFAULT not valid;

alter table "public"."m_product_category" validate constraint "m_product_category_parent_id_fkey";

alter table "public"."m_product_po" add constraint "m_product_po_c_bpartner_id_fkey" FOREIGN KEY (c_bpartner_id) REFERENCES c_bpartner(id) ON DELETE CASCADE not valid;

alter table "public"."m_product_po" validate constraint "m_product_po_c_bpartner_id_fkey";

alter table "public"."m_product_po" add constraint "m_product_po_c_currency_id_fkey" FOREIGN KEY (c_currency_id) REFERENCES c_currency(id) ON DELETE SET DEFAULT not valid;

alter table "public"."m_product_po" validate constraint "m_product_po_c_currency_id_fkey";

alter table "public"."m_product_po" add constraint "m_product_po_c_uom_id_fkey" FOREIGN KEY (c_uom_id) REFERENCES c_uom(id) ON DELETE SET DEFAULT not valid;

alter table "public"."m_product_po" validate constraint "m_product_po_c_uom_id_fkey";

alter table "public"."m_product_po" add constraint "m_product_po_m_product_id_fkey" FOREIGN KEY (m_product_id) REFERENCES m_product(id) ON DELETE CASCADE not valid;

alter table "public"."m_product_po" validate constraint "m_product_po_m_product_id_fkey";

alter table "public"."m_productprice" add constraint "m_productprice_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_productprice" validate constraint "m_productprice_ad_client_id_fkey";

alter table "public"."m_productprice" add constraint "m_productprice_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_productprice" validate constraint "m_productprice_ad_org_id_fkey";

alter table "public"."m_productprice" add constraint "m_productprice_m_pricelist_version_id_fkey" FOREIGN KEY (m_pricelist_version_id) REFERENCES m_pricelist_version(id) not valid;

alter table "public"."m_productprice" validate constraint "m_productprice_m_pricelist_version_id_fkey";

alter table "public"."m_productprice" add constraint "m_productprice_m_pricelist_version_id_m_product_id_key" UNIQUE using index "m_productprice_m_pricelist_version_id_m_product_id_key";

alter table "public"."m_productprice" add constraint "m_productprice_m_product_id_fkey" FOREIGN KEY (m_product_id) REFERENCES m_product(id) not valid;

alter table "public"."m_productprice" validate constraint "m_productprice_m_product_id_fkey";

alter table "public"."m_replenish" add constraint "m_replenish_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_replenish" validate constraint "m_replenish_ad_client_id_fkey";

alter table "public"."m_replenish" add constraint "m_replenish_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_replenish" validate constraint "m_replenish_ad_org_id_fkey";

alter table "public"."m_replenish" add constraint "m_replenish_m_locator_id_fkey" FOREIGN KEY (m_locator_id) REFERENCES m_locator(id) ON DELETE SET DEFAULT not valid;

alter table "public"."m_replenish" validate constraint "m_replenish_m_locator_id_fkey";

alter table "public"."m_replenish" add constraint "m_replenish_m_product_id_fkey" FOREIGN KEY (m_product_id) REFERENCES m_product(id) ON DELETE CASCADE not valid;

alter table "public"."m_replenish" validate constraint "m_replenish_m_product_id_fkey";

alter table "public"."m_replenish" add constraint "m_replenish_m_product_id_m_warehouse_id_key" UNIQUE using index "m_replenish_m_product_id_m_warehouse_id_key";

alter table "public"."m_replenish" add constraint "m_replenish_m_replenish_uu_key" UNIQUE using index "m_replenish_m_replenish_uu_key";

alter table "public"."m_replenish" add constraint "m_replenish_m_warehouse_id_fkey" FOREIGN KEY (m_warehouse_id) REFERENCES m_warehouse(id) ON DELETE CASCADE not valid;

alter table "public"."m_replenish" validate constraint "m_replenish_m_warehouse_id_fkey";

alter table "public"."m_replenish" add constraint "m_replenish_m_warehousesource_id_fkey" FOREIGN KEY (m_warehousesource_id) REFERENCES m_warehouse(id) ON DELETE CASCADE not valid;

alter table "public"."m_replenish" validate constraint "m_replenish_m_warehousesource_id_fkey";

alter table "public"."m_storageonhand" add constraint "m_storageonhand_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_storageonhand" validate constraint "m_storageonhand_ad_client_id_fkey";

alter table "public"."m_storageonhand" add constraint "m_storageonhand_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_storageonhand" validate constraint "m_storageonhand_ad_org_id_fkey";

alter table "public"."m_storageonhand" add constraint "m_storageonhand_m_locator_id_fkey" FOREIGN KEY (m_locator_id) REFERENCES m_locator(id) not valid;

alter table "public"."m_storageonhand" validate constraint "m_storageonhand_m_locator_id_fkey";

alter table "public"."m_storageonhand" add constraint "m_storageonhand_m_product_id_fkey" FOREIGN KEY (m_product_id) REFERENCES m_product(id) ON DELETE CASCADE not valid;

alter table "public"."m_storageonhand" validate constraint "m_storageonhand_m_product_id_fkey";

alter table "public"."m_storageonhand" add constraint "m_storageonhand_m_product_id_warehouse_id_key" UNIQUE using index "m_storageonhand_m_product_id_warehouse_id_key";

alter table "public"."m_storageonhand" add constraint "m_storageonhand_warehouse_id_fkey" FOREIGN KEY (warehouse_id) REFERENCES m_warehouse(id) not valid;

alter table "public"."m_storageonhand" validate constraint "m_storageonhand_warehouse_id_fkey";

alter table "public"."m_substitute" add constraint "m_substitute_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_substitute" validate constraint "m_substitute_ad_client_id_fkey";

alter table "public"."m_substitute" add constraint "m_substitute_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."m_substitute" validate constraint "m_substitute_ad_org_id_fkey";

alter table "public"."m_substitute" add constraint "m_substitute_m_product_id_fkey" FOREIGN KEY (m_product_id) REFERENCES m_product(id) ON DELETE CASCADE not valid;

alter table "public"."m_substitute" validate constraint "m_substitute_m_product_id_fkey";

alter table "public"."m_substitute" add constraint "m_substitute_substitute_id_fkey" FOREIGN KEY (substitute_id) REFERENCES m_product(id) ON DELETE CASCADE not valid;

alter table "public"."m_substitute" validate constraint "m_substitute_substitute_id_fkey";

alter table "public"."m_warehouse" add constraint "m_warehouse_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."m_warehouse" validate constraint "m_warehouse_ad_client_id_fkey";

alter table "public"."m_warehouse" add constraint "m_warehouse_ad_client_id_name_key" UNIQUE using index "m_warehouse_ad_client_id_name_key";

alter table "public"."m_warehouse" add constraint "warehouse_code_key" UNIQUE using index "warehouse_code_key";

alter table "public"."m_warehouse" add constraint "warehouse_name_key" UNIQUE using index "warehouse_name_key";

alter table "public"."w_basket" add constraint "w_basket_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."w_basket" validate constraint "w_basket_ad_client_id_fkey";

alter table "public"."w_basket" add constraint "w_basket_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."w_basket" validate constraint "w_basket_ad_org_id_fkey";

alter table "public"."w_basket" add constraint "w_basket_ad_user_id_fkey" FOREIGN KEY (ad_user_id) REFERENCES ad_user(id) ON DELETE CASCADE not valid;

alter table "public"."w_basket" validate constraint "w_basket_ad_user_id_fkey";

alter table "public"."w_basket" add constraint "w_basket_c_bpartner_id_fkey" FOREIGN KEY (c_bpartner_id) REFERENCES c_bpartner(id) ON DELETE SET DEFAULT not valid;

alter table "public"."w_basket" validate constraint "w_basket_c_bpartner_id_fkey";

alter table "public"."w_basket" add constraint "w_basket_m_pricelist_id_fkey" FOREIGN KEY (m_pricelist_id) REFERENCES m_pricelist(id) ON DELETE SET DEFAULT not valid;

alter table "public"."w_basket" validate constraint "w_basket_m_pricelist_id_fkey";

alter table "public"."w_basket" add constraint "w_basket_session_id_key" UNIQUE using index "w_basket_session_id_key";

alter table "public"."w_basket" add constraint "w_basket_w_basket_uu_key" UNIQUE using index "w_basket_w_basket_uu_key";

alter table "public"."w_basketline" add constraint "w_basketline_ad_client_id_fkey" FOREIGN KEY (ad_client_id) REFERENCES ad_client(id) not valid;

alter table "public"."w_basketline" validate constraint "w_basketline_ad_client_id_fkey";

alter table "public"."w_basketline" add constraint "w_basketline_ad_org_id_fkey" FOREIGN KEY (ad_org_id) REFERENCES ad_org(id) not valid;

alter table "public"."w_basketline" validate constraint "w_basketline_ad_org_id_fkey";

alter table "public"."w_basketline" add constraint "w_basketline_m_product_id_fkey" FOREIGN KEY (m_product_id) REFERENCES m_product(id) ON DELETE SET NULL not valid;

alter table "public"."w_basketline" validate constraint "w_basketline_m_product_id_fkey";

alter table "public"."w_basketline" add constraint "w_basketline_w_basket_id_fkey" FOREIGN KEY (w_basket_id) REFERENCES w_basket(id) ON DELETE CASCADE not valid;

alter table "public"."w_basketline" validate constraint "w_basketline_w_basket_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.delete_avatar(avatar_url text, OUT status integer, OUT content text)
 RETURNS record
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
begin
  select
      into status, content
           result.status, result.content
      from public.delete_storage_object('avatars', avatar_url) as result;
end;
$function$
;

CREATE OR REPLACE FUNCTION public.delete_old_ad_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
begin
  delete from public.ad_user where id = old.id;
  return old;
end;
$function$
;

CREATE OR REPLACE FUNCTION public.delete_old_avatar()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
declare
  status int;
  content text;
  avatar_name text;
begin
  if coalesce(old.avatar_url, '') <> ''
      and (tg_op = 'DELETE' or (old.avatar_url <> coalesce(new.avatar_url, ''))) then
    -- extract avatar name
    avatar_name := old.avatar_url;
    select
      into status, content
      result.status, result.content
      from public.delete_avatar(avatar_name) as result;
    if status <> 200 then
      raise warning 'Could not delete avatar: % %', status, content;
    end if;
  end if;
  if tg_op = 'DELETE' then
    return old;
  end if;
  return new;
end;
$function$
;

CREATE OR REPLACE FUNCTION public.delete_storage_object(bucket text, object text, OUT status integer, OUT content text)
 RETURNS record
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
declare
  project_url text := '<YOURPROJECTURL>';
  service_role_key text := '<YOURSERVICEROLEKEY>'; --  full access needed
  url text := project_url||'/storage/v1/object/'||bucket||'/'||object;
begin
  select
      into status, content
           result.status::int, result.content::text
      FROM extensions.http((
    'DELETE',
    url,
    ARRAY[extensions.http_header('authorization','Bearer '||service_role_key)],
    NULL,
    NULL)::extensions.http_request) as result;
end;
$function$
;

CREATE OR REPLACE FUNCTION public.update_crud_history()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$declare 
  group_name text;
begin
  select pc.name into group_name from m_product_category as pc 
  where pc.id = new.m_product_category_id;

  if old.name <> new.name or old.mpn <> new.mpn or old.m_product_category_id <> new.m_product_category_id or (old.m_product_category_id IS NULL and new.m_product_category_id IS NOT NULL) or (old.m_product_category_id IS NOT NULL and new.m_product_category_id IS NULL) then
    insert into crud_history(changed_data, sku)
    values (concat('{"name": "', REPLACE(new.name, '"', '\"'), '", "mpn":"', new.mpn, '", "group": "', group_name ,'"}'), new.sku);
  end if;
  return new;
end;
$function$
;

grant delete on table "public"."_template" to "anon";

grant insert on table "public"."_template" to "anon";

grant references on table "public"."_template" to "anon";

grant select on table "public"."_template" to "anon";

grant trigger on table "public"."_template" to "anon";

grant truncate on table "public"."_template" to "anon";

grant update on table "public"."_template" to "anon";

grant delete on table "public"."_template" to "authenticated";

grant insert on table "public"."_template" to "authenticated";

grant references on table "public"."_template" to "authenticated";

grant select on table "public"."_template" to "authenticated";

grant trigger on table "public"."_template" to "authenticated";

grant truncate on table "public"."_template" to "authenticated";

grant update on table "public"."_template" to "authenticated";

grant delete on table "public"."_template" to "postgres";

grant insert on table "public"."_template" to "postgres";

grant references on table "public"."_template" to "postgres";

grant select on table "public"."_template" to "postgres";

grant trigger on table "public"."_template" to "postgres";

grant truncate on table "public"."_template" to "postgres";

grant update on table "public"."_template" to "postgres";

grant delete on table "public"."_template" to "service_role";

grant insert on table "public"."_template" to "service_role";

grant references on table "public"."_template" to "service_role";

grant select on table "public"."_template" to "service_role";

grant trigger on table "public"."_template" to "service_role";

grant truncate on table "public"."_template" to "service_role";

grant update on table "public"."_template" to "service_role";

grant delete on table "public"."ad_client" to "anon";

grant insert on table "public"."ad_client" to "anon";

grant references on table "public"."ad_client" to "anon";

grant select on table "public"."ad_client" to "anon";

grant trigger on table "public"."ad_client" to "anon";

grant truncate on table "public"."ad_client" to "anon";

grant update on table "public"."ad_client" to "anon";

grant delete on table "public"."ad_client" to "authenticated";

grant insert on table "public"."ad_client" to "authenticated";

grant references on table "public"."ad_client" to "authenticated";

grant select on table "public"."ad_client" to "authenticated";

grant trigger on table "public"."ad_client" to "authenticated";

grant truncate on table "public"."ad_client" to "authenticated";

grant update on table "public"."ad_client" to "authenticated";

grant delete on table "public"."ad_client" to "postgres";

grant insert on table "public"."ad_client" to "postgres";

grant references on table "public"."ad_client" to "postgres";

grant select on table "public"."ad_client" to "postgres";

grant trigger on table "public"."ad_client" to "postgres";

grant truncate on table "public"."ad_client" to "postgres";

grant update on table "public"."ad_client" to "postgres";

grant delete on table "public"."ad_client" to "service_role";

grant insert on table "public"."ad_client" to "service_role";

grant references on table "public"."ad_client" to "service_role";

grant select on table "public"."ad_client" to "service_role";

grant trigger on table "public"."ad_client" to "service_role";

grant truncate on table "public"."ad_client" to "service_role";

grant update on table "public"."ad_client" to "service_role";

grant delete on table "public"."ad_org" to "anon";

grant insert on table "public"."ad_org" to "anon";

grant references on table "public"."ad_org" to "anon";

grant select on table "public"."ad_org" to "anon";

grant trigger on table "public"."ad_org" to "anon";

grant truncate on table "public"."ad_org" to "anon";

grant update on table "public"."ad_org" to "anon";

grant delete on table "public"."ad_org" to "authenticated";

grant insert on table "public"."ad_org" to "authenticated";

grant references on table "public"."ad_org" to "authenticated";

grant select on table "public"."ad_org" to "authenticated";

grant trigger on table "public"."ad_org" to "authenticated";

grant truncate on table "public"."ad_org" to "authenticated";

grant update on table "public"."ad_org" to "authenticated";

grant delete on table "public"."ad_org" to "postgres";

grant insert on table "public"."ad_org" to "postgres";

grant references on table "public"."ad_org" to "postgres";

grant select on table "public"."ad_org" to "postgres";

grant trigger on table "public"."ad_org" to "postgres";

grant truncate on table "public"."ad_org" to "postgres";

grant update on table "public"."ad_org" to "postgres";

grant delete on table "public"."ad_org" to "service_role";

grant insert on table "public"."ad_org" to "service_role";

grant references on table "public"."ad_org" to "service_role";

grant select on table "public"."ad_org" to "service_role";

grant trigger on table "public"."ad_org" to "service_role";

grant truncate on table "public"."ad_org" to "service_role";

grant update on table "public"."ad_org" to "service_role";

grant delete on table "public"."ad_user" to "anon";

grant insert on table "public"."ad_user" to "anon";

grant references on table "public"."ad_user" to "anon";

grant select on table "public"."ad_user" to "anon";

grant trigger on table "public"."ad_user" to "anon";

grant truncate on table "public"."ad_user" to "anon";

grant update on table "public"."ad_user" to "anon";

grant delete on table "public"."ad_user" to "authenticated";

grant insert on table "public"."ad_user" to "authenticated";

grant references on table "public"."ad_user" to "authenticated";

grant select on table "public"."ad_user" to "authenticated";

grant trigger on table "public"."ad_user" to "authenticated";

grant truncate on table "public"."ad_user" to "authenticated";

grant update on table "public"."ad_user" to "authenticated";

grant delete on table "public"."ad_user" to "postgres";

grant insert on table "public"."ad_user" to "postgres";

grant references on table "public"."ad_user" to "postgres";

grant select on table "public"."ad_user" to "postgres";

grant trigger on table "public"."ad_user" to "postgres";

grant truncate on table "public"."ad_user" to "postgres";

grant update on table "public"."ad_user" to "postgres";

grant delete on table "public"."ad_user" to "service_role";

grant insert on table "public"."ad_user" to "service_role";

grant references on table "public"."ad_user" to "service_role";

grant select on table "public"."ad_user" to "service_role";

grant trigger on table "public"."ad_user" to "service_role";

grant truncate on table "public"."ad_user" to "service_role";

grant update on table "public"."ad_user" to "service_role";

grant delete on table "public"."asset" to "anon";

grant insert on table "public"."asset" to "anon";

grant references on table "public"."asset" to "anon";

grant select on table "public"."asset" to "anon";

grant trigger on table "public"."asset" to "anon";

grant truncate on table "public"."asset" to "anon";

grant update on table "public"."asset" to "anon";

grant delete on table "public"."asset" to "authenticated";

grant insert on table "public"."asset" to "authenticated";

grant references on table "public"."asset" to "authenticated";

grant select on table "public"."asset" to "authenticated";

grant trigger on table "public"."asset" to "authenticated";

grant truncate on table "public"."asset" to "authenticated";

grant update on table "public"."asset" to "authenticated";

grant delete on table "public"."asset" to "postgres";

grant insert on table "public"."asset" to "postgres";

grant references on table "public"."asset" to "postgres";

grant select on table "public"."asset" to "postgres";

grant trigger on table "public"."asset" to "postgres";

grant truncate on table "public"."asset" to "postgres";

grant update on table "public"."asset" to "postgres";

grant delete on table "public"."asset" to "service_role";

grant insert on table "public"."asset" to "service_role";

grant references on table "public"."asset" to "service_role";

grant select on table "public"."asset" to "service_role";

grant trigger on table "public"."asset" to "service_role";

grant truncate on table "public"."asset" to "service_role";

grant update on table "public"."asset" to "service_role";

grant delete on table "public"."c_bpartner" to "anon";

grant insert on table "public"."c_bpartner" to "anon";

grant references on table "public"."c_bpartner" to "anon";

grant select on table "public"."c_bpartner" to "anon";

grant trigger on table "public"."c_bpartner" to "anon";

grant truncate on table "public"."c_bpartner" to "anon";

grant update on table "public"."c_bpartner" to "anon";

grant delete on table "public"."c_bpartner" to "authenticated";

grant insert on table "public"."c_bpartner" to "authenticated";

grant references on table "public"."c_bpartner" to "authenticated";

grant select on table "public"."c_bpartner" to "authenticated";

grant trigger on table "public"."c_bpartner" to "authenticated";

grant truncate on table "public"."c_bpartner" to "authenticated";

grant update on table "public"."c_bpartner" to "authenticated";

grant delete on table "public"."c_bpartner" to "postgres";

grant insert on table "public"."c_bpartner" to "postgres";

grant references on table "public"."c_bpartner" to "postgres";

grant select on table "public"."c_bpartner" to "postgres";

grant trigger on table "public"."c_bpartner" to "postgres";

grant truncate on table "public"."c_bpartner" to "postgres";

grant update on table "public"."c_bpartner" to "postgres";

grant delete on table "public"."c_bpartner" to "service_role";

grant insert on table "public"."c_bpartner" to "service_role";

grant references on table "public"."c_bpartner" to "service_role";

grant select on table "public"."c_bpartner" to "service_role";

grant trigger on table "public"."c_bpartner" to "service_role";

grant truncate on table "public"."c_bpartner" to "service_role";

grant update on table "public"."c_bpartner" to "service_role";

grant delete on table "public"."c_channel" to "anon";

grant insert on table "public"."c_channel" to "anon";

grant references on table "public"."c_channel" to "anon";

grant select on table "public"."c_channel" to "anon";

grant trigger on table "public"."c_channel" to "anon";

grant truncate on table "public"."c_channel" to "anon";

grant update on table "public"."c_channel" to "anon";

grant delete on table "public"."c_channel" to "authenticated";

grant insert on table "public"."c_channel" to "authenticated";

grant references on table "public"."c_channel" to "authenticated";

grant select on table "public"."c_channel" to "authenticated";

grant trigger on table "public"."c_channel" to "authenticated";

grant truncate on table "public"."c_channel" to "authenticated";

grant update on table "public"."c_channel" to "authenticated";

grant delete on table "public"."c_channel" to "postgres";

grant insert on table "public"."c_channel" to "postgres";

grant references on table "public"."c_channel" to "postgres";

grant select on table "public"."c_channel" to "postgres";

grant trigger on table "public"."c_channel" to "postgres";

grant truncate on table "public"."c_channel" to "postgres";

grant update on table "public"."c_channel" to "postgres";

grant delete on table "public"."c_channel" to "service_role";

grant insert on table "public"."c_channel" to "service_role";

grant references on table "public"."c_channel" to "service_role";

grant select on table "public"."c_channel" to "service_role";

grant trigger on table "public"."c_channel" to "service_role";

grant truncate on table "public"."c_channel" to "service_role";

grant update on table "public"."c_channel" to "service_role";

grant delete on table "public"."c_channel_map" to "anon";

grant insert on table "public"."c_channel_map" to "anon";

grant references on table "public"."c_channel_map" to "anon";

grant select on table "public"."c_channel_map" to "anon";

grant trigger on table "public"."c_channel_map" to "anon";

grant truncate on table "public"."c_channel_map" to "anon";

grant update on table "public"."c_channel_map" to "anon";

grant delete on table "public"."c_channel_map" to "authenticated";

grant insert on table "public"."c_channel_map" to "authenticated";

grant references on table "public"."c_channel_map" to "authenticated";

grant select on table "public"."c_channel_map" to "authenticated";

grant trigger on table "public"."c_channel_map" to "authenticated";

grant truncate on table "public"."c_channel_map" to "authenticated";

grant update on table "public"."c_channel_map" to "authenticated";

grant delete on table "public"."c_channel_map" to "postgres";

grant insert on table "public"."c_channel_map" to "postgres";

grant references on table "public"."c_channel_map" to "postgres";

grant select on table "public"."c_channel_map" to "postgres";

grant trigger on table "public"."c_channel_map" to "postgres";

grant truncate on table "public"."c_channel_map" to "postgres";

grant update on table "public"."c_channel_map" to "postgres";

grant delete on table "public"."c_channel_map" to "service_role";

grant insert on table "public"."c_channel_map" to "service_role";

grant references on table "public"."c_channel_map" to "service_role";

grant select on table "public"."c_channel_map" to "service_role";

grant trigger on table "public"."c_channel_map" to "service_role";

grant truncate on table "public"."c_channel_map" to "service_role";

grant update on table "public"."c_channel_map" to "service_role";

grant delete on table "public"."c_currency" to "anon";

grant insert on table "public"."c_currency" to "anon";

grant references on table "public"."c_currency" to "anon";

grant select on table "public"."c_currency" to "anon";

grant trigger on table "public"."c_currency" to "anon";

grant truncate on table "public"."c_currency" to "anon";

grant update on table "public"."c_currency" to "anon";

grant delete on table "public"."c_currency" to "authenticated";

grant insert on table "public"."c_currency" to "authenticated";

grant references on table "public"."c_currency" to "authenticated";

grant select on table "public"."c_currency" to "authenticated";

grant trigger on table "public"."c_currency" to "authenticated";

grant truncate on table "public"."c_currency" to "authenticated";

grant update on table "public"."c_currency" to "authenticated";

grant delete on table "public"."c_currency" to "postgres";

grant insert on table "public"."c_currency" to "postgres";

grant references on table "public"."c_currency" to "postgres";

grant select on table "public"."c_currency" to "postgres";

grant trigger on table "public"."c_currency" to "postgres";

grant truncate on table "public"."c_currency" to "postgres";

grant update on table "public"."c_currency" to "postgres";

grant delete on table "public"."c_currency" to "service_role";

grant insert on table "public"."c_currency" to "service_role";

grant references on table "public"."c_currency" to "service_role";

grant select on table "public"."c_currency" to "service_role";

grant trigger on table "public"."c_currency" to "service_role";

grant truncate on table "public"."c_currency" to "service_role";

grant update on table "public"."c_currency" to "service_role";

grant delete on table "public"."c_tax" to "anon";

grant insert on table "public"."c_tax" to "anon";

grant references on table "public"."c_tax" to "anon";

grant select on table "public"."c_tax" to "anon";

grant trigger on table "public"."c_tax" to "anon";

grant truncate on table "public"."c_tax" to "anon";

grant update on table "public"."c_tax" to "anon";

grant delete on table "public"."c_tax" to "authenticated";

grant insert on table "public"."c_tax" to "authenticated";

grant references on table "public"."c_tax" to "authenticated";

grant select on table "public"."c_tax" to "authenticated";

grant trigger on table "public"."c_tax" to "authenticated";

grant truncate on table "public"."c_tax" to "authenticated";

grant update on table "public"."c_tax" to "authenticated";

grant delete on table "public"."c_tax" to "postgres";

grant insert on table "public"."c_tax" to "postgres";

grant references on table "public"."c_tax" to "postgres";

grant select on table "public"."c_tax" to "postgres";

grant trigger on table "public"."c_tax" to "postgres";

grant truncate on table "public"."c_tax" to "postgres";

grant update on table "public"."c_tax" to "postgres";

grant delete on table "public"."c_tax" to "service_role";

grant insert on table "public"."c_tax" to "service_role";

grant references on table "public"."c_tax" to "service_role";

grant select on table "public"."c_tax" to "service_role";

grant trigger on table "public"."c_tax" to "service_role";

grant truncate on table "public"."c_tax" to "service_role";

grant update on table "public"."c_tax" to "service_role";

grant delete on table "public"."c_taxcategory" to "anon";

grant insert on table "public"."c_taxcategory" to "anon";

grant references on table "public"."c_taxcategory" to "anon";

grant select on table "public"."c_taxcategory" to "anon";

grant trigger on table "public"."c_taxcategory" to "anon";

grant truncate on table "public"."c_taxcategory" to "anon";

grant update on table "public"."c_taxcategory" to "anon";

grant delete on table "public"."c_taxcategory" to "authenticated";

grant insert on table "public"."c_taxcategory" to "authenticated";

grant references on table "public"."c_taxcategory" to "authenticated";

grant select on table "public"."c_taxcategory" to "authenticated";

grant trigger on table "public"."c_taxcategory" to "authenticated";

grant truncate on table "public"."c_taxcategory" to "authenticated";

grant update on table "public"."c_taxcategory" to "authenticated";

grant delete on table "public"."c_taxcategory" to "postgres";

grant insert on table "public"."c_taxcategory" to "postgres";

grant references on table "public"."c_taxcategory" to "postgres";

grant select on table "public"."c_taxcategory" to "postgres";

grant trigger on table "public"."c_taxcategory" to "postgres";

grant truncate on table "public"."c_taxcategory" to "postgres";

grant update on table "public"."c_taxcategory" to "postgres";

grant delete on table "public"."c_taxcategory" to "service_role";

grant insert on table "public"."c_taxcategory" to "service_role";

grant references on table "public"."c_taxcategory" to "service_role";

grant select on table "public"."c_taxcategory" to "service_role";

grant trigger on table "public"."c_taxcategory" to "service_role";

grant truncate on table "public"."c_taxcategory" to "service_role";

grant update on table "public"."c_taxcategory" to "service_role";

grant delete on table "public"."c_uom" to "anon";

grant insert on table "public"."c_uom" to "anon";

grant references on table "public"."c_uom" to "anon";

grant select on table "public"."c_uom" to "anon";

grant trigger on table "public"."c_uom" to "anon";

grant truncate on table "public"."c_uom" to "anon";

grant update on table "public"."c_uom" to "anon";

grant delete on table "public"."c_uom" to "authenticated";

grant insert on table "public"."c_uom" to "authenticated";

grant references on table "public"."c_uom" to "authenticated";

grant select on table "public"."c_uom" to "authenticated";

grant trigger on table "public"."c_uom" to "authenticated";

grant truncate on table "public"."c_uom" to "authenticated";

grant update on table "public"."c_uom" to "authenticated";

grant delete on table "public"."c_uom" to "postgres";

grant insert on table "public"."c_uom" to "postgres";

grant references on table "public"."c_uom" to "postgres";

grant select on table "public"."c_uom" to "postgres";

grant trigger on table "public"."c_uom" to "postgres";

grant truncate on table "public"."c_uom" to "postgres";

grant update on table "public"."c_uom" to "postgres";

grant delete on table "public"."c_uom" to "service_role";

grant insert on table "public"."c_uom" to "service_role";

grant references on table "public"."c_uom" to "service_role";

grant select on table "public"."c_uom" to "service_role";

grant trigger on table "public"."c_uom" to "service_role";

grant truncate on table "public"."c_uom" to "service_role";

grant update on table "public"."c_uom" to "service_role";

grant delete on table "public"."c_uom_conversion" to "anon";

grant insert on table "public"."c_uom_conversion" to "anon";

grant references on table "public"."c_uom_conversion" to "anon";

grant select on table "public"."c_uom_conversion" to "anon";

grant trigger on table "public"."c_uom_conversion" to "anon";

grant truncate on table "public"."c_uom_conversion" to "anon";

grant update on table "public"."c_uom_conversion" to "anon";

grant delete on table "public"."c_uom_conversion" to "authenticated";

grant insert on table "public"."c_uom_conversion" to "authenticated";

grant references on table "public"."c_uom_conversion" to "authenticated";

grant select on table "public"."c_uom_conversion" to "authenticated";

grant trigger on table "public"."c_uom_conversion" to "authenticated";

grant truncate on table "public"."c_uom_conversion" to "authenticated";

grant update on table "public"."c_uom_conversion" to "authenticated";

grant delete on table "public"."c_uom_conversion" to "postgres";

grant insert on table "public"."c_uom_conversion" to "postgres";

grant references on table "public"."c_uom_conversion" to "postgres";

grant select on table "public"."c_uom_conversion" to "postgres";

grant trigger on table "public"."c_uom_conversion" to "postgres";

grant truncate on table "public"."c_uom_conversion" to "postgres";

grant update on table "public"."c_uom_conversion" to "postgres";

grant delete on table "public"."c_uom_conversion" to "service_role";

grant insert on table "public"."c_uom_conversion" to "service_role";

grant references on table "public"."c_uom_conversion" to "service_role";

grant select on table "public"."c_uom_conversion" to "service_role";

grant trigger on table "public"."c_uom_conversion" to "service_role";

grant truncate on table "public"."c_uom_conversion" to "service_role";

grant update on table "public"."c_uom_conversion" to "service_role";

grant delete on table "public"."crud_history" to "anon";

grant insert on table "public"."crud_history" to "anon";

grant references on table "public"."crud_history" to "anon";

grant select on table "public"."crud_history" to "anon";

grant trigger on table "public"."crud_history" to "anon";

grant truncate on table "public"."crud_history" to "anon";

grant update on table "public"."crud_history" to "anon";

grant delete on table "public"."crud_history" to "authenticated";

grant insert on table "public"."crud_history" to "authenticated";

grant references on table "public"."crud_history" to "authenticated";

grant select on table "public"."crud_history" to "authenticated";

grant trigger on table "public"."crud_history" to "authenticated";

grant truncate on table "public"."crud_history" to "authenticated";

grant update on table "public"."crud_history" to "authenticated";

grant delete on table "public"."crud_history" to "postgres";

grant insert on table "public"."crud_history" to "postgres";

grant references on table "public"."crud_history" to "postgres";

grant select on table "public"."crud_history" to "postgres";

grant trigger on table "public"."crud_history" to "postgres";

grant truncate on table "public"."crud_history" to "postgres";

grant update on table "public"."crud_history" to "postgres";

grant delete on table "public"."crud_history" to "service_role";

grant insert on table "public"."crud_history" to "service_role";

grant references on table "public"."crud_history" to "service_role";

grant select on table "public"."crud_history" to "service_role";

grant trigger on table "public"."crud_history" to "service_role";

grant truncate on table "public"."crud_history" to "service_role";

grant update on table "public"."crud_history" to "service_role";

grant delete on table "public"."m_attribute" to "anon";

grant insert on table "public"."m_attribute" to "anon";

grant references on table "public"."m_attribute" to "anon";

grant select on table "public"."m_attribute" to "anon";

grant trigger on table "public"."m_attribute" to "anon";

grant truncate on table "public"."m_attribute" to "anon";

grant update on table "public"."m_attribute" to "anon";

grant delete on table "public"."m_attribute" to "authenticated";

grant insert on table "public"."m_attribute" to "authenticated";

grant references on table "public"."m_attribute" to "authenticated";

grant select on table "public"."m_attribute" to "authenticated";

grant trigger on table "public"."m_attribute" to "authenticated";

grant truncate on table "public"."m_attribute" to "authenticated";

grant update on table "public"."m_attribute" to "authenticated";

grant delete on table "public"."m_attribute" to "postgres";

grant insert on table "public"."m_attribute" to "postgres";

grant references on table "public"."m_attribute" to "postgres";

grant select on table "public"."m_attribute" to "postgres";

grant trigger on table "public"."m_attribute" to "postgres";

grant truncate on table "public"."m_attribute" to "postgres";

grant update on table "public"."m_attribute" to "postgres";

grant delete on table "public"."m_attribute" to "service_role";

grant insert on table "public"."m_attribute" to "service_role";

grant references on table "public"."m_attribute" to "service_role";

grant select on table "public"."m_attribute" to "service_role";

grant trigger on table "public"."m_attribute" to "service_role";

grant truncate on table "public"."m_attribute" to "service_role";

grant update on table "public"."m_attribute" to "service_role";

grant delete on table "public"."m_attributegroup" to "anon";

grant insert on table "public"."m_attributegroup" to "anon";

grant references on table "public"."m_attributegroup" to "anon";

grant select on table "public"."m_attributegroup" to "anon";

grant trigger on table "public"."m_attributegroup" to "anon";

grant truncate on table "public"."m_attributegroup" to "anon";

grant update on table "public"."m_attributegroup" to "anon";

grant delete on table "public"."m_attributegroup" to "authenticated";

grant insert on table "public"."m_attributegroup" to "authenticated";

grant references on table "public"."m_attributegroup" to "authenticated";

grant select on table "public"."m_attributegroup" to "authenticated";

grant trigger on table "public"."m_attributegroup" to "authenticated";

grant truncate on table "public"."m_attributegroup" to "authenticated";

grant update on table "public"."m_attributegroup" to "authenticated";

grant delete on table "public"."m_attributegroup" to "postgres";

grant insert on table "public"."m_attributegroup" to "postgres";

grant references on table "public"."m_attributegroup" to "postgres";

grant select on table "public"."m_attributegroup" to "postgres";

grant trigger on table "public"."m_attributegroup" to "postgres";

grant truncate on table "public"."m_attributegroup" to "postgres";

grant update on table "public"."m_attributegroup" to "postgres";

grant delete on table "public"."m_attributegroup" to "service_role";

grant insert on table "public"."m_attributegroup" to "service_role";

grant references on table "public"."m_attributegroup" to "service_role";

grant select on table "public"."m_attributegroup" to "service_role";

grant trigger on table "public"."m_attributegroup" to "service_role";

grant truncate on table "public"."m_attributegroup" to "service_role";

grant update on table "public"."m_attributegroup" to "service_role";

grant delete on table "public"."m_attributeinstance" to "anon";

grant insert on table "public"."m_attributeinstance" to "anon";

grant references on table "public"."m_attributeinstance" to "anon";

grant select on table "public"."m_attributeinstance" to "anon";

grant trigger on table "public"."m_attributeinstance" to "anon";

grant truncate on table "public"."m_attributeinstance" to "anon";

grant update on table "public"."m_attributeinstance" to "anon";

grant delete on table "public"."m_attributeinstance" to "authenticated";

grant insert on table "public"."m_attributeinstance" to "authenticated";

grant references on table "public"."m_attributeinstance" to "authenticated";

grant select on table "public"."m_attributeinstance" to "authenticated";

grant trigger on table "public"."m_attributeinstance" to "authenticated";

grant truncate on table "public"."m_attributeinstance" to "authenticated";

grant update on table "public"."m_attributeinstance" to "authenticated";

grant delete on table "public"."m_attributeinstance" to "postgres";

grant insert on table "public"."m_attributeinstance" to "postgres";

grant references on table "public"."m_attributeinstance" to "postgres";

grant select on table "public"."m_attributeinstance" to "postgres";

grant trigger on table "public"."m_attributeinstance" to "postgres";

grant truncate on table "public"."m_attributeinstance" to "postgres";

grant update on table "public"."m_attributeinstance" to "postgres";

grant delete on table "public"."m_attributeinstance" to "service_role";

grant insert on table "public"."m_attributeinstance" to "service_role";

grant references on table "public"."m_attributeinstance" to "service_role";

grant select on table "public"."m_attributeinstance" to "service_role";

grant trigger on table "public"."m_attributeinstance" to "service_role";

grant truncate on table "public"."m_attributeinstance" to "service_role";

grant update on table "public"."m_attributeinstance" to "service_role";

grant delete on table "public"."m_attributeset" to "anon";

grant insert on table "public"."m_attributeset" to "anon";

grant references on table "public"."m_attributeset" to "anon";

grant select on table "public"."m_attributeset" to "anon";

grant trigger on table "public"."m_attributeset" to "anon";

grant truncate on table "public"."m_attributeset" to "anon";

grant update on table "public"."m_attributeset" to "anon";

grant delete on table "public"."m_attributeset" to "authenticated";

grant insert on table "public"."m_attributeset" to "authenticated";

grant references on table "public"."m_attributeset" to "authenticated";

grant select on table "public"."m_attributeset" to "authenticated";

grant trigger on table "public"."m_attributeset" to "authenticated";

grant truncate on table "public"."m_attributeset" to "authenticated";

grant update on table "public"."m_attributeset" to "authenticated";

grant delete on table "public"."m_attributeset" to "postgres";

grant insert on table "public"."m_attributeset" to "postgres";

grant references on table "public"."m_attributeset" to "postgres";

grant select on table "public"."m_attributeset" to "postgres";

grant trigger on table "public"."m_attributeset" to "postgres";

grant truncate on table "public"."m_attributeset" to "postgres";

grant update on table "public"."m_attributeset" to "postgres";

grant delete on table "public"."m_attributeset" to "service_role";

grant insert on table "public"."m_attributeset" to "service_role";

grant references on table "public"."m_attributeset" to "service_role";

grant select on table "public"."m_attributeset" to "service_role";

grant trigger on table "public"."m_attributeset" to "service_role";

grant truncate on table "public"."m_attributeset" to "service_role";

grant update on table "public"."m_attributeset" to "service_role";

grant delete on table "public"."m_attributesetinstance" to "anon";

grant insert on table "public"."m_attributesetinstance" to "anon";

grant references on table "public"."m_attributesetinstance" to "anon";

grant select on table "public"."m_attributesetinstance" to "anon";

grant trigger on table "public"."m_attributesetinstance" to "anon";

grant truncate on table "public"."m_attributesetinstance" to "anon";

grant update on table "public"."m_attributesetinstance" to "anon";

grant delete on table "public"."m_attributesetinstance" to "authenticated";

grant insert on table "public"."m_attributesetinstance" to "authenticated";

grant references on table "public"."m_attributesetinstance" to "authenticated";

grant select on table "public"."m_attributesetinstance" to "authenticated";

grant trigger on table "public"."m_attributesetinstance" to "authenticated";

grant truncate on table "public"."m_attributesetinstance" to "authenticated";

grant update on table "public"."m_attributesetinstance" to "authenticated";

grant delete on table "public"."m_attributesetinstance" to "postgres";

grant insert on table "public"."m_attributesetinstance" to "postgres";

grant references on table "public"."m_attributesetinstance" to "postgres";

grant select on table "public"."m_attributesetinstance" to "postgres";

grant trigger on table "public"."m_attributesetinstance" to "postgres";

grant truncate on table "public"."m_attributesetinstance" to "postgres";

grant update on table "public"."m_attributesetinstance" to "postgres";

grant delete on table "public"."m_attributesetinstance" to "service_role";

grant insert on table "public"."m_attributesetinstance" to "service_role";

grant references on table "public"."m_attributesetinstance" to "service_role";

grant select on table "public"."m_attributesetinstance" to "service_role";

grant trigger on table "public"."m_attributesetinstance" to "service_role";

grant truncate on table "public"."m_attributesetinstance" to "service_role";

grant update on table "public"."m_attributesetinstance" to "service_role";

grant delete on table "public"."m_attributeuse" to "anon";

grant insert on table "public"."m_attributeuse" to "anon";

grant references on table "public"."m_attributeuse" to "anon";

grant select on table "public"."m_attributeuse" to "anon";

grant trigger on table "public"."m_attributeuse" to "anon";

grant truncate on table "public"."m_attributeuse" to "anon";

grant update on table "public"."m_attributeuse" to "anon";

grant delete on table "public"."m_attributeuse" to "authenticated";

grant insert on table "public"."m_attributeuse" to "authenticated";

grant references on table "public"."m_attributeuse" to "authenticated";

grant select on table "public"."m_attributeuse" to "authenticated";

grant trigger on table "public"."m_attributeuse" to "authenticated";

grant truncate on table "public"."m_attributeuse" to "authenticated";

grant update on table "public"."m_attributeuse" to "authenticated";

grant delete on table "public"."m_attributeuse" to "postgres";

grant insert on table "public"."m_attributeuse" to "postgres";

grant references on table "public"."m_attributeuse" to "postgres";

grant select on table "public"."m_attributeuse" to "postgres";

grant trigger on table "public"."m_attributeuse" to "postgres";

grant truncate on table "public"."m_attributeuse" to "postgres";

grant update on table "public"."m_attributeuse" to "postgres";

grant delete on table "public"."m_attributeuse" to "service_role";

grant insert on table "public"."m_attributeuse" to "service_role";

grant references on table "public"."m_attributeuse" to "service_role";

grant select on table "public"."m_attributeuse" to "service_role";

grant trigger on table "public"."m_attributeuse" to "service_role";

grant truncate on table "public"."m_attributeuse" to "service_role";

grant update on table "public"."m_attributeuse" to "service_role";

grant delete on table "public"."m_attributevalue" to "anon";

grant insert on table "public"."m_attributevalue" to "anon";

grant references on table "public"."m_attributevalue" to "anon";

grant select on table "public"."m_attributevalue" to "anon";

grant trigger on table "public"."m_attributevalue" to "anon";

grant truncate on table "public"."m_attributevalue" to "anon";

grant update on table "public"."m_attributevalue" to "anon";

grant delete on table "public"."m_attributevalue" to "authenticated";

grant insert on table "public"."m_attributevalue" to "authenticated";

grant references on table "public"."m_attributevalue" to "authenticated";

grant select on table "public"."m_attributevalue" to "authenticated";

grant trigger on table "public"."m_attributevalue" to "authenticated";

grant truncate on table "public"."m_attributevalue" to "authenticated";

grant update on table "public"."m_attributevalue" to "authenticated";

grant delete on table "public"."m_attributevalue" to "postgres";

grant insert on table "public"."m_attributevalue" to "postgres";

grant references on table "public"."m_attributevalue" to "postgres";

grant select on table "public"."m_attributevalue" to "postgres";

grant trigger on table "public"."m_attributevalue" to "postgres";

grant truncate on table "public"."m_attributevalue" to "postgres";

grant update on table "public"."m_attributevalue" to "postgres";

grant delete on table "public"."m_attributevalue" to "service_role";

grant insert on table "public"."m_attributevalue" to "service_role";

grant references on table "public"."m_attributevalue" to "service_role";

grant select on table "public"."m_attributevalue" to "service_role";

grant trigger on table "public"."m_attributevalue" to "service_role";

grant truncate on table "public"."m_attributevalue" to "service_role";

grant update on table "public"."m_attributevalue" to "service_role";

grant delete on table "public"."m_discountschema" to "anon";

grant insert on table "public"."m_discountschema" to "anon";

grant references on table "public"."m_discountschema" to "anon";

grant select on table "public"."m_discountschema" to "anon";

grant trigger on table "public"."m_discountschema" to "anon";

grant truncate on table "public"."m_discountschema" to "anon";

grant update on table "public"."m_discountschema" to "anon";

grant delete on table "public"."m_discountschema" to "authenticated";

grant insert on table "public"."m_discountschema" to "authenticated";

grant references on table "public"."m_discountschema" to "authenticated";

grant select on table "public"."m_discountschema" to "authenticated";

grant trigger on table "public"."m_discountschema" to "authenticated";

grant truncate on table "public"."m_discountschema" to "authenticated";

grant update on table "public"."m_discountschema" to "authenticated";

grant delete on table "public"."m_discountschema" to "postgres";

grant insert on table "public"."m_discountschema" to "postgres";

grant references on table "public"."m_discountschema" to "postgres";

grant select on table "public"."m_discountschema" to "postgres";

grant trigger on table "public"."m_discountschema" to "postgres";

grant truncate on table "public"."m_discountschema" to "postgres";

grant update on table "public"."m_discountschema" to "postgres";

grant delete on table "public"."m_discountschema" to "service_role";

grant insert on table "public"."m_discountschema" to "service_role";

grant references on table "public"."m_discountschema" to "service_role";

grant select on table "public"."m_discountschema" to "service_role";

grant trigger on table "public"."m_discountschema" to "service_role";

grant truncate on table "public"."m_discountschema" to "service_role";

grant update on table "public"."m_discountschema" to "service_role";

grant delete on table "public"."m_locator" to "anon";

grant insert on table "public"."m_locator" to "anon";

grant references on table "public"."m_locator" to "anon";

grant select on table "public"."m_locator" to "anon";

grant trigger on table "public"."m_locator" to "anon";

grant truncate on table "public"."m_locator" to "anon";

grant update on table "public"."m_locator" to "anon";

grant delete on table "public"."m_locator" to "authenticated";

grant insert on table "public"."m_locator" to "authenticated";

grant references on table "public"."m_locator" to "authenticated";

grant select on table "public"."m_locator" to "authenticated";

grant trigger on table "public"."m_locator" to "authenticated";

grant truncate on table "public"."m_locator" to "authenticated";

grant update on table "public"."m_locator" to "authenticated";

grant delete on table "public"."m_locator" to "postgres";

grant insert on table "public"."m_locator" to "postgres";

grant references on table "public"."m_locator" to "postgres";

grant select on table "public"."m_locator" to "postgres";

grant trigger on table "public"."m_locator" to "postgres";

grant truncate on table "public"."m_locator" to "postgres";

grant update on table "public"."m_locator" to "postgres";

grant delete on table "public"."m_locator" to "service_role";

grant insert on table "public"."m_locator" to "service_role";

grant references on table "public"."m_locator" to "service_role";

grant select on table "public"."m_locator" to "service_role";

grant trigger on table "public"."m_locator" to "service_role";

grant truncate on table "public"."m_locator" to "service_role";

grant update on table "public"."m_locator" to "service_role";

grant delete on table "public"."m_pricelist" to "anon";

grant insert on table "public"."m_pricelist" to "anon";

grant references on table "public"."m_pricelist" to "anon";

grant select on table "public"."m_pricelist" to "anon";

grant trigger on table "public"."m_pricelist" to "anon";

grant truncate on table "public"."m_pricelist" to "anon";

grant update on table "public"."m_pricelist" to "anon";

grant delete on table "public"."m_pricelist" to "authenticated";

grant insert on table "public"."m_pricelist" to "authenticated";

grant references on table "public"."m_pricelist" to "authenticated";

grant select on table "public"."m_pricelist" to "authenticated";

grant trigger on table "public"."m_pricelist" to "authenticated";

grant truncate on table "public"."m_pricelist" to "authenticated";

grant update on table "public"."m_pricelist" to "authenticated";

grant delete on table "public"."m_pricelist" to "postgres";

grant insert on table "public"."m_pricelist" to "postgres";

grant references on table "public"."m_pricelist" to "postgres";

grant select on table "public"."m_pricelist" to "postgres";

grant trigger on table "public"."m_pricelist" to "postgres";

grant truncate on table "public"."m_pricelist" to "postgres";

grant update on table "public"."m_pricelist" to "postgres";

grant delete on table "public"."m_pricelist" to "service_role";

grant insert on table "public"."m_pricelist" to "service_role";

grant references on table "public"."m_pricelist" to "service_role";

grant select on table "public"."m_pricelist" to "service_role";

grant trigger on table "public"."m_pricelist" to "service_role";

grant truncate on table "public"."m_pricelist" to "service_role";

grant update on table "public"."m_pricelist" to "service_role";

grant delete on table "public"."m_pricelist_version" to "anon";

grant insert on table "public"."m_pricelist_version" to "anon";

grant references on table "public"."m_pricelist_version" to "anon";

grant select on table "public"."m_pricelist_version" to "anon";

grant trigger on table "public"."m_pricelist_version" to "anon";

grant truncate on table "public"."m_pricelist_version" to "anon";

grant update on table "public"."m_pricelist_version" to "anon";

grant delete on table "public"."m_pricelist_version" to "authenticated";

grant insert on table "public"."m_pricelist_version" to "authenticated";

grant references on table "public"."m_pricelist_version" to "authenticated";

grant select on table "public"."m_pricelist_version" to "authenticated";

grant trigger on table "public"."m_pricelist_version" to "authenticated";

grant truncate on table "public"."m_pricelist_version" to "authenticated";

grant update on table "public"."m_pricelist_version" to "authenticated";

grant delete on table "public"."m_pricelist_version" to "postgres";

grant insert on table "public"."m_pricelist_version" to "postgres";

grant references on table "public"."m_pricelist_version" to "postgres";

grant select on table "public"."m_pricelist_version" to "postgres";

grant trigger on table "public"."m_pricelist_version" to "postgres";

grant truncate on table "public"."m_pricelist_version" to "postgres";

grant update on table "public"."m_pricelist_version" to "postgres";

grant delete on table "public"."m_pricelist_version" to "service_role";

grant insert on table "public"."m_pricelist_version" to "service_role";

grant references on table "public"."m_pricelist_version" to "service_role";

grant select on table "public"."m_pricelist_version" to "service_role";

grant trigger on table "public"."m_pricelist_version" to "service_role";

grant truncate on table "public"."m_pricelist_version" to "service_role";

grant update on table "public"."m_pricelist_version" to "service_role";

grant delete on table "public"."m_product" to "anon";

grant insert on table "public"."m_product" to "anon";

grant references on table "public"."m_product" to "anon";

grant select on table "public"."m_product" to "anon";

grant trigger on table "public"."m_product" to "anon";

grant truncate on table "public"."m_product" to "anon";

grant update on table "public"."m_product" to "anon";

grant delete on table "public"."m_product" to "authenticated";

grant insert on table "public"."m_product" to "authenticated";

grant references on table "public"."m_product" to "authenticated";

grant select on table "public"."m_product" to "authenticated";

grant trigger on table "public"."m_product" to "authenticated";

grant truncate on table "public"."m_product" to "authenticated";

grant update on table "public"."m_product" to "authenticated";

grant delete on table "public"."m_product" to "postgres";

grant insert on table "public"."m_product" to "postgres";

grant references on table "public"."m_product" to "postgres";

grant select on table "public"."m_product" to "postgres";

grant trigger on table "public"."m_product" to "postgres";

grant truncate on table "public"."m_product" to "postgres";

grant update on table "public"."m_product" to "postgres";

grant delete on table "public"."m_product" to "service_role";

grant insert on table "public"."m_product" to "service_role";

grant references on table "public"."m_product" to "service_role";

grant select on table "public"."m_product" to "service_role";

grant trigger on table "public"."m_product" to "service_role";

grant truncate on table "public"."m_product" to "service_role";

grant update on table "public"."m_product" to "service_role";

grant delete on table "public"."m_product_category" to "anon";

grant insert on table "public"."m_product_category" to "anon";

grant references on table "public"."m_product_category" to "anon";

grant select on table "public"."m_product_category" to "anon";

grant trigger on table "public"."m_product_category" to "anon";

grant truncate on table "public"."m_product_category" to "anon";

grant update on table "public"."m_product_category" to "anon";

grant delete on table "public"."m_product_category" to "authenticated";

grant insert on table "public"."m_product_category" to "authenticated";

grant references on table "public"."m_product_category" to "authenticated";

grant select on table "public"."m_product_category" to "authenticated";

grant trigger on table "public"."m_product_category" to "authenticated";

grant truncate on table "public"."m_product_category" to "authenticated";

grant update on table "public"."m_product_category" to "authenticated";

grant delete on table "public"."m_product_category" to "postgres";

grant insert on table "public"."m_product_category" to "postgres";

grant references on table "public"."m_product_category" to "postgres";

grant select on table "public"."m_product_category" to "postgres";

grant trigger on table "public"."m_product_category" to "postgres";

grant truncate on table "public"."m_product_category" to "postgres";

grant update on table "public"."m_product_category" to "postgres";

grant delete on table "public"."m_product_category" to "service_role";

grant insert on table "public"."m_product_category" to "service_role";

grant references on table "public"."m_product_category" to "service_role";

grant select on table "public"."m_product_category" to "service_role";

grant trigger on table "public"."m_product_category" to "service_role";

grant truncate on table "public"."m_product_category" to "service_role";

grant update on table "public"."m_product_category" to "service_role";

grant delete on table "public"."m_product_po" to "anon";

grant insert on table "public"."m_product_po" to "anon";

grant references on table "public"."m_product_po" to "anon";

grant select on table "public"."m_product_po" to "anon";

grant trigger on table "public"."m_product_po" to "anon";

grant truncate on table "public"."m_product_po" to "anon";

grant update on table "public"."m_product_po" to "anon";

grant delete on table "public"."m_product_po" to "authenticated";

grant insert on table "public"."m_product_po" to "authenticated";

grant references on table "public"."m_product_po" to "authenticated";

grant select on table "public"."m_product_po" to "authenticated";

grant trigger on table "public"."m_product_po" to "authenticated";

grant truncate on table "public"."m_product_po" to "authenticated";

grant update on table "public"."m_product_po" to "authenticated";

grant delete on table "public"."m_product_po" to "postgres";

grant insert on table "public"."m_product_po" to "postgres";

grant references on table "public"."m_product_po" to "postgres";

grant select on table "public"."m_product_po" to "postgres";

grant trigger on table "public"."m_product_po" to "postgres";

grant truncate on table "public"."m_product_po" to "postgres";

grant update on table "public"."m_product_po" to "postgres";

grant delete on table "public"."m_product_po" to "service_role";

grant insert on table "public"."m_product_po" to "service_role";

grant references on table "public"."m_product_po" to "service_role";

grant select on table "public"."m_product_po" to "service_role";

grant trigger on table "public"."m_product_po" to "service_role";

grant truncate on table "public"."m_product_po" to "service_role";

grant update on table "public"."m_product_po" to "service_role";

grant delete on table "public"."m_productprice" to "anon";

grant insert on table "public"."m_productprice" to "anon";

grant references on table "public"."m_productprice" to "anon";

grant select on table "public"."m_productprice" to "anon";

grant trigger on table "public"."m_productprice" to "anon";

grant truncate on table "public"."m_productprice" to "anon";

grant update on table "public"."m_productprice" to "anon";

grant delete on table "public"."m_productprice" to "authenticated";

grant insert on table "public"."m_productprice" to "authenticated";

grant references on table "public"."m_productprice" to "authenticated";

grant select on table "public"."m_productprice" to "authenticated";

grant trigger on table "public"."m_productprice" to "authenticated";

grant truncate on table "public"."m_productprice" to "authenticated";

grant update on table "public"."m_productprice" to "authenticated";

grant delete on table "public"."m_productprice" to "postgres";

grant insert on table "public"."m_productprice" to "postgres";

grant references on table "public"."m_productprice" to "postgres";

grant select on table "public"."m_productprice" to "postgres";

grant trigger on table "public"."m_productprice" to "postgres";

grant truncate on table "public"."m_productprice" to "postgres";

grant update on table "public"."m_productprice" to "postgres";

grant delete on table "public"."m_productprice" to "service_role";

grant insert on table "public"."m_productprice" to "service_role";

grant references on table "public"."m_productprice" to "service_role";

grant select on table "public"."m_productprice" to "service_role";

grant trigger on table "public"."m_productprice" to "service_role";

grant truncate on table "public"."m_productprice" to "service_role";

grant update on table "public"."m_productprice" to "service_role";

grant delete on table "public"."m_replenish" to "anon";

grant insert on table "public"."m_replenish" to "anon";

grant references on table "public"."m_replenish" to "anon";

grant select on table "public"."m_replenish" to "anon";

grant trigger on table "public"."m_replenish" to "anon";

grant truncate on table "public"."m_replenish" to "anon";

grant update on table "public"."m_replenish" to "anon";

grant delete on table "public"."m_replenish" to "authenticated";

grant insert on table "public"."m_replenish" to "authenticated";

grant references on table "public"."m_replenish" to "authenticated";

grant select on table "public"."m_replenish" to "authenticated";

grant trigger on table "public"."m_replenish" to "authenticated";

grant truncate on table "public"."m_replenish" to "authenticated";

grant update on table "public"."m_replenish" to "authenticated";

grant delete on table "public"."m_replenish" to "postgres";

grant insert on table "public"."m_replenish" to "postgres";

grant references on table "public"."m_replenish" to "postgres";

grant select on table "public"."m_replenish" to "postgres";

grant trigger on table "public"."m_replenish" to "postgres";

grant truncate on table "public"."m_replenish" to "postgres";

grant update on table "public"."m_replenish" to "postgres";

grant delete on table "public"."m_replenish" to "service_role";

grant insert on table "public"."m_replenish" to "service_role";

grant references on table "public"."m_replenish" to "service_role";

grant select on table "public"."m_replenish" to "service_role";

grant trigger on table "public"."m_replenish" to "service_role";

grant truncate on table "public"."m_replenish" to "service_role";

grant update on table "public"."m_replenish" to "service_role";

grant delete on table "public"."m_storageonhand" to "anon";

grant insert on table "public"."m_storageonhand" to "anon";

grant references on table "public"."m_storageonhand" to "anon";

grant select on table "public"."m_storageonhand" to "anon";

grant trigger on table "public"."m_storageonhand" to "anon";

grant truncate on table "public"."m_storageonhand" to "anon";

grant update on table "public"."m_storageonhand" to "anon";

grant delete on table "public"."m_storageonhand" to "authenticated";

grant insert on table "public"."m_storageonhand" to "authenticated";

grant references on table "public"."m_storageonhand" to "authenticated";

grant select on table "public"."m_storageonhand" to "authenticated";

grant trigger on table "public"."m_storageonhand" to "authenticated";

grant truncate on table "public"."m_storageonhand" to "authenticated";

grant update on table "public"."m_storageonhand" to "authenticated";

grant delete on table "public"."m_storageonhand" to "postgres";

grant insert on table "public"."m_storageonhand" to "postgres";

grant references on table "public"."m_storageonhand" to "postgres";

grant select on table "public"."m_storageonhand" to "postgres";

grant trigger on table "public"."m_storageonhand" to "postgres";

grant truncate on table "public"."m_storageonhand" to "postgres";

grant update on table "public"."m_storageonhand" to "postgres";

grant delete on table "public"."m_storageonhand" to "service_role";

grant insert on table "public"."m_storageonhand" to "service_role";

grant references on table "public"."m_storageonhand" to "service_role";

grant select on table "public"."m_storageonhand" to "service_role";

grant trigger on table "public"."m_storageonhand" to "service_role";

grant truncate on table "public"."m_storageonhand" to "service_role";

grant update on table "public"."m_storageonhand" to "service_role";

grant delete on table "public"."m_substitute" to "anon";

grant insert on table "public"."m_substitute" to "anon";

grant references on table "public"."m_substitute" to "anon";

grant select on table "public"."m_substitute" to "anon";

grant trigger on table "public"."m_substitute" to "anon";

grant truncate on table "public"."m_substitute" to "anon";

grant update on table "public"."m_substitute" to "anon";

grant delete on table "public"."m_substitute" to "authenticated";

grant insert on table "public"."m_substitute" to "authenticated";

grant references on table "public"."m_substitute" to "authenticated";

grant select on table "public"."m_substitute" to "authenticated";

grant trigger on table "public"."m_substitute" to "authenticated";

grant truncate on table "public"."m_substitute" to "authenticated";

grant update on table "public"."m_substitute" to "authenticated";

grant delete on table "public"."m_substitute" to "postgres";

grant insert on table "public"."m_substitute" to "postgres";

grant references on table "public"."m_substitute" to "postgres";

grant select on table "public"."m_substitute" to "postgres";

grant trigger on table "public"."m_substitute" to "postgres";

grant truncate on table "public"."m_substitute" to "postgres";

grant update on table "public"."m_substitute" to "postgres";

grant delete on table "public"."m_substitute" to "service_role";

grant insert on table "public"."m_substitute" to "service_role";

grant references on table "public"."m_substitute" to "service_role";

grant select on table "public"."m_substitute" to "service_role";

grant trigger on table "public"."m_substitute" to "service_role";

grant truncate on table "public"."m_substitute" to "service_role";

grant update on table "public"."m_substitute" to "service_role";

grant delete on table "public"."m_warehouse" to "anon";

grant insert on table "public"."m_warehouse" to "anon";

grant references on table "public"."m_warehouse" to "anon";

grant select on table "public"."m_warehouse" to "anon";

grant trigger on table "public"."m_warehouse" to "anon";

grant truncate on table "public"."m_warehouse" to "anon";

grant update on table "public"."m_warehouse" to "anon";

grant delete on table "public"."m_warehouse" to "authenticated";

grant insert on table "public"."m_warehouse" to "authenticated";

grant references on table "public"."m_warehouse" to "authenticated";

grant select on table "public"."m_warehouse" to "authenticated";

grant trigger on table "public"."m_warehouse" to "authenticated";

grant truncate on table "public"."m_warehouse" to "authenticated";

grant update on table "public"."m_warehouse" to "authenticated";

grant delete on table "public"."m_warehouse" to "postgres";

grant insert on table "public"."m_warehouse" to "postgres";

grant references on table "public"."m_warehouse" to "postgres";

grant select on table "public"."m_warehouse" to "postgres";

grant trigger on table "public"."m_warehouse" to "postgres";

grant truncate on table "public"."m_warehouse" to "postgres";

grant update on table "public"."m_warehouse" to "postgres";

grant delete on table "public"."m_warehouse" to "service_role";

grant insert on table "public"."m_warehouse" to "service_role";

grant references on table "public"."m_warehouse" to "service_role";

grant select on table "public"."m_warehouse" to "service_role";

grant trigger on table "public"."m_warehouse" to "service_role";

grant truncate on table "public"."m_warehouse" to "service_role";

grant update on table "public"."m_warehouse" to "service_role";

grant delete on table "public"."w_basket" to "anon";

grant insert on table "public"."w_basket" to "anon";

grant references on table "public"."w_basket" to "anon";

grant select on table "public"."w_basket" to "anon";

grant trigger on table "public"."w_basket" to "anon";

grant truncate on table "public"."w_basket" to "anon";

grant update on table "public"."w_basket" to "anon";

grant delete on table "public"."w_basket" to "authenticated";

grant insert on table "public"."w_basket" to "authenticated";

grant references on table "public"."w_basket" to "authenticated";

grant select on table "public"."w_basket" to "authenticated";

grant trigger on table "public"."w_basket" to "authenticated";

grant truncate on table "public"."w_basket" to "authenticated";

grant update on table "public"."w_basket" to "authenticated";

grant delete on table "public"."w_basket" to "postgres";

grant insert on table "public"."w_basket" to "postgres";

grant references on table "public"."w_basket" to "postgres";

grant select on table "public"."w_basket" to "postgres";

grant trigger on table "public"."w_basket" to "postgres";

grant truncate on table "public"."w_basket" to "postgres";

grant update on table "public"."w_basket" to "postgres";

grant delete on table "public"."w_basket" to "service_role";

grant insert on table "public"."w_basket" to "service_role";

grant references on table "public"."w_basket" to "service_role";

grant select on table "public"."w_basket" to "service_role";

grant trigger on table "public"."w_basket" to "service_role";

grant truncate on table "public"."w_basket" to "service_role";

grant update on table "public"."w_basket" to "service_role";

grant delete on table "public"."w_basketline" to "anon";

grant insert on table "public"."w_basketline" to "anon";

grant references on table "public"."w_basketline" to "anon";

grant select on table "public"."w_basketline" to "anon";

grant trigger on table "public"."w_basketline" to "anon";

grant truncate on table "public"."w_basketline" to "anon";

grant update on table "public"."w_basketline" to "anon";

grant delete on table "public"."w_basketline" to "authenticated";

grant insert on table "public"."w_basketline" to "authenticated";

grant references on table "public"."w_basketline" to "authenticated";

grant select on table "public"."w_basketline" to "authenticated";

grant trigger on table "public"."w_basketline" to "authenticated";

grant truncate on table "public"."w_basketline" to "authenticated";

grant update on table "public"."w_basketline" to "authenticated";

grant delete on table "public"."w_basketline" to "postgres";

grant insert on table "public"."w_basketline" to "postgres";

grant references on table "public"."w_basketline" to "postgres";

grant select on table "public"."w_basketline" to "postgres";

grant trigger on table "public"."w_basketline" to "postgres";

grant truncate on table "public"."w_basketline" to "postgres";

grant update on table "public"."w_basketline" to "postgres";

grant delete on table "public"."w_basketline" to "service_role";

grant insert on table "public"."w_basketline" to "service_role";

grant references on table "public"."w_basketline" to "service_role";

grant select on table "public"."w_basketline" to "service_role";

grant trigger on table "public"."w_basketline" to "service_role";

grant truncate on table "public"."w_basketline" to "service_role";

grant update on table "public"."w_basketline" to "service_role";

create policy "Enable ALL for authenticated users only"
on "public"."_template"
as permissive
for all
to authenticated
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."ad_client"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."ad_org"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Public profiles are viewable by the owner."
on "public"."ad_user"
as permissive
for select
to public
using ((auth.uid() = auth_user_id));


create policy "Users can insert their own profile."
on "public"."ad_user"
as permissive
for insert
to public
with check ((auth.uid() = auth_user_id));


create policy "Users can update own profile."
on "public"."ad_user"
as permissive
for update
to public
using ((auth.uid() = auth_user_id));


create policy "Enable all for authenticated users only"
on "public"."asset"
as permissive
for all
to authenticated
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."c_bpartner"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."c_currency"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."c_tax"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."c_taxcategory"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."c_uom"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."c_uom_conversion"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_attribute"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_attributegroup"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_attributeinstance"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_attributeset"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_attributesetinstance"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_attributeuse"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_attributevalue"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_discountschema"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_locator"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_pricelist"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_pricelist_version"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_product"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_product_category"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_product_po"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_productprice"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_replenish"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_storageonhand"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable ALL for authenticated users only"
on "public"."m_warehouse"
as permissive
for all
to authenticated
using (true)
with check (true);


CREATE TRIGGER handle_updated BEFORE UPDATE ON public._template FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.ad_client FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.ad_org FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER before_ad_user_changes BEFORE DELETE OR UPDATE OF avatar_url ON public.ad_user FOR EACH ROW EXECUTE FUNCTION delete_old_avatar();

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.c_bpartner FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.c_currency FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.c_tax FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.c_taxcategory FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.c_uom FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_attribute FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_attributegroup FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_attributeset FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_attributevalue FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_discountschema FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_locator FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_pricelist FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_pricelist_version FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_product FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER m_product_update_trigger AFTER UPDATE ON public.m_product FOR EACH ROW EXECUTE FUNCTION update_crud_history();

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_product_category FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_product_po FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_productprice FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_replenish FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_storageonhand FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');

CREATE TRIGGER handle_updated BEFORE UPDATE ON public.m_warehouse FOR EACH ROW EXECUTE FUNCTION moddatetime('updated');


